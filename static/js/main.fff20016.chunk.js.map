{"version":3,"sources":["panels/Loader.js","panels/Intro.js","panels/Home.js","panels/Play.js","panels/Settings.js","panels/Rating.js","panels/Info.js","panels/Warning.js","App.js","index.js","img/arrow.svg","img/AvatarApp.png"],"names":["Loader","props","useEffect","bridge","send","then","data","console","log","Object","values","keys","isNaN","lat","goToPage","catch","error","id","separator","className","Intro","class","slideWidth","style","height","bullets","position","marginTop","textAlign","fontSize","fontFamily","top","marginLeft","src","Arrow","alt","onClick","goToHome","mode","size","Home","color","before","undefined","iconStatus","changeLevel","chooseLevel","width","data-to","Play","useState","leftCity","setStateLeftCity","rightCity","setStateRightCity","count","setStateCount","timer","setStateTimer","leftCityDictance","setStateleftCityDictance","rightCityDictance","setStaterightCityDictance","leftCityResponse","setStateleftCityResponse","rightCityResponse","setStaterightCityResponse","setStatestatusBackground","isStartGame","setStateisStartGame","isOverGame","setStateisOverGame","isNextGame","setStateisNextGame","timerId","setStatetimerId","progressId","setStateprogressId","resultId","setStateresultId","result","setStateresult","setStateuserPostRes","geoUser","setStateGeoUser","left","leftButton","right","rightButton","statusRightButton","setStateStatusRightButton","statusLeftButton","setStateStatusLeftButton","startGame","geolocation","setInterval","randRight","Math","floor","random","length","randLeft","arrLeft","fromEntries","arrRight","city","setTimeout","clearInterval","countDown","randRightCity","randLeftCity","getDistanceFromLatLonInKmRight","lat4","lon4","lat8","lon8","dLat1","deg2rad","dLon1","a1","sin","cos","atan2","sqrt","deg1","PI","getDistanceFromLatLonInKmLeft","lat1","lon1","lat2","lon2","dLat","dLon","a","deg","split","long","toFixed","i","t","timerIdcountDown","window","history","back","title","parseInt","value","background","Settings","lengthSearch","setStateLengthSearch","setStateCheckClick","descriptionAdress0","setStateDescriptionAdress0","nameAdress0","setStateNameAdress0","position0","setStatePosition0","descriptionAdress1","setStateDescriptionAdress1","nameAdress1","setStateNameAdress1","position1","setStatePosition1","descriptionAdress2","setStateDescriptionAdress2","nameAdress2","setStateNameAdress2","position2","setStatePosition2","description0","setStateDescription0","description1","setStateDescription1","chooseGeo0","setStateChooseGeo0","chooseGeo1","setStateChooseGeo1","setStateChooseDescription","setStateChooseName","header","onChange","document","getElementById","api","fetch","res","json","response","GeoObjectCollection","featureMember","GeoObject","name","Point","pos","reverse","description","e","searchChange","placeholder","multiline","savePositionGlobal","Rating","photo","setStatePhoto","userName","setStateUserName","rating","setStateRating","photo_200","first_name","last_name","Info","AvatarApp","href","target","lights","arrCountryRight","arrCountryLeft","arrCityLeft","arrCityRight","App","activePanel","setActivePanel","scheme","SetStateScheme","setStatePosition","setStateGeolocation","setStateLeft","setStateRight","setStateChooseLevel","descriptionButton","setStateDescriptionButton","setStateTitle","pushState","panel","push","goBack","pop","camelCase","needChange","isLight","includes","subscribe","detail","type","addEventListener","geo","setStateIconStatus","isWebView","onSwipeBack","Warning","root","ReactDOM","render","module","exports"],"mappings":"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","file":"static/js/main.fff20016.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\n\r\nconst Loader = props => {\r\n\r\n    useEffect(() => {\r\n        \r\n        bridge.send(\"VKWebAppStorageGet\", { \"keys\": [\"isSeenIntro1\"] })\r\n            .then(data => {\r\n                console.log(Object.values(data.keys[0])[1]);\r\n                if (Object.values(data.keys[0])[1] === \"true\") {\r\n\r\n                    bridge.send(\"VKWebAppGetGeodata\")\r\n                        .then(data => {\r\n                            if (isNaN(data.lat)) {\r\n                                console.log(data.lat);\r\n                                props.goToPage('Warning')\r\n                            } else {\r\n                                props.goToPage('Home')\r\n                            }\r\n                        })\r\n                        .catch(error => {\r\n                            console.log(error);\r\n                            props.goToPage('Warning')\r\n                        })\r\n\r\n                } else {\r\n                    props.goToPage('Intro')\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n\r\n\r\n    }, []);\r\n\r\n   \r\n\r\n    return (\r\n\r\n    <Panel id={props.id} separator={false}>\r\n        <div className=\"stage\">\r\n            <div className=\"blockLoader\">\r\n                <div className=\"titleLoader\"><h1>Идет загрузка.</h1></div>\r\n                <div className=\"earthLoader\"></div>\r\n            </div>\r\n        </div>\r\n    </Panel>\r\n    )\r\n};\r\n\r\nexport default Loader;","import React, { useEffect } from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport Gallery from '@vkontakte/vkui/dist/components/Gallery/Gallery';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport Arrow from '../img/arrow.svg';\r\nimport './Style.css';\r\n\r\nconst Intro = props => {\r\n\r\nconst firstOpenApp = () => {\r\n\r\n\r\n    bridge.send(\"VKWebAppStorageSet\", { \"key\": \"hasSeenOnboarding7\", \"value\": 'true' });\r\n    bridge.send(\"VKWebAppStorageSet\", { \"key\": \"rating\", \"value\": '0 км' });\r\n    bridge.send(\"VKWebAppStorageSet\", { \"key\": \"geo\", \"value\": '' });\r\n    bridge.send(\"VKWebAppStorageSet\", { \"key\": \"pos\", \"value\": '' });\r\n    \r\n    props.goToHome()\r\n}\r\n\r\n    return (\r\n\r\n        <Panel id={props.id} separator={false}>\r\n            <div className=\"stage\">\r\n                <ul class=\"circles\">\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                </ul>\r\n                <Gallery \r\n                    slideWidth=\"100%\"\r\n                    style={{ height: \"90%\" }}\r\n                    bullets=\"dark\"\r\n                >\r\n                    <div style={{ position: 'relative', marginTop: '20vh' }}>\r\n                        <Div style={{ textAlign: 'center', fontSize: 18, fontFamily: 'Neucha' }}><h1>Добро пожаловать в интеллектуальную игру под названием Towner!</h1>\r\n                            <img className=\"scale\" style={{ position: 'absolute', top: '33%', marginLeft: '20%' }} src={Arrow} alt=\"\" /></Div></div>\r\n                    <div style={{ position: 'relative', marginTop: '20vh' }}>\r\n                        <Div style={{ textAlign: 'center', fontSize: 18, fontFamily: 'Neucha' }}><h1>\r\n                            Предлагаем тебе проверить, насколько хорошо ты ориентируешься в географии и связанных с ней понятиях!\r\n                        </h1><img className=\"scale\" src={Arrow} alt=\"\" style={{ position: 'absolute', top: '33%', marginLeft: '20%' }}/></Div></div>\r\n                   \r\n                    <div style={{ position: 'relative', marginTop: '20vh' }}>\r\n                        <Div style={{ textAlign: 'center', fontSize: 18, fontFamily: 'Neucha' }}>\r\n                            <h1> Задача проста: сравнить расстояние до двух городов/стран относительно твоего местоположения и выбрать наиболее ближайший!</h1>\r\n                            <img className=\"scale\" src={Arrow} alt=\"\" style={{ position: 'absolute', top: '33%', marginLeft: '20%' }}/></Div></div>\r\n                   \r\n                    <div style={{ position: 'relative', marginTop: '20vh' }}>\r\n                            <Div style={{ textAlign: 'center', fontSize: 18, fontFamily: 'Neucha' }}>\r\n                                <h1>У тебя будет выбор между игрой по странам или же городам!</h1>\r\n                            <Button style={{ position: 'relative', marginTop: '19vh' }} onClick={() => firstOpenApp()} mode='outline' size='xl'> <h1 style={{ textAlign: 'center', fontSize: 40, fontFamily: 'Neucha' }}>Начать!</h1></Button></Div></div>\r\n\r\n                </Gallery>\r\n            </div>\r\n        </Panel>\r\n    )\r\n};\r\n\r\nexport default Intro;","import React from 'react';\nimport {Panel, Button} from '@vkontakte/vkui/';\nimport Icon48Play from '@vkontakte/icons/dist/48/play';\nimport Icon28SettingsOutline from '@vkontakte/icons/dist/28/settings_outline';\nimport Icon28ErrorOutline from '@vkontakte/icons/dist/28/error_outline';\nimport Icon28GraphOutline from '@vkontakte/icons/dist/28/graph_outline';\nimport './Style.css';\n\nconst Home = (props) => {\n\n\t\n\tconst startGame = () => {\n\n\t\tif (props.position === undefined || props.position === '') {\n\n\t\t\tprops.goToPage('Warning')\n\t\t\t\n\t\t} else {\n\n\t\t\tprops.goToPage('Play')\n\t\t\t\n\t\t}\n\t}\n\n\tconst changeLevel = () => {\n\t\tprops.changeLevel()\n\t}\n\n\n\treturn ( \n\t\t<Panel id={props.id} separator={false}>\n\t\t\t<div className=\"stage\">\n\t\t\t\t<ul class=\"circles\">\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\t\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t\n\t\t\t\t</ul>\n\t\t\t\t<div className=\"title\"><h1 style={{ color: \"white\", fontSize: 45, fontFamily: 'Neucha' }}>Towner</h1></div>\n\t\t\t\t<Button className=\"startButton\" before={<Icon48Play style={{ color: \"white\" }} />} mode=\"outline\" size=\"xl\" onClick={() => startGame()}>\n\t\t\t\t\t<p style={{\n\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\tfontSize: 30,\n\t\t\t\t\t\tfontFamily: 'Neucha',\n\t\t\t\t\t}}>Играть!</p>\n\t\t\t\t</Button>\n\t\t\t\t<Button className=\"levelButton\" before={props.iconStatus} onClick={() => changeLevel()} size='xl' mode='outline'><h1 style={{ color: \"white\", fontFamily: 'Neucha', fontSize: 19 }}>{props.chooseLevel}</h1></Button>\n\n\t\t\t\t<div className=\"blockButton\">\n\t\t\t\t<Button\n\t\t\t\t\tclassName=\"settingsButton\"\n\t\t\t\t\tbefore={<Icon28SettingsOutline width={41} height={41} style={{ color: \"white\" }} />}\n\t\t\t\t\tmode=\"outline\"\n\t\t\t\t\tsize=\"\"\n\t\t\t\t\tonClick={() => props.goToPage('Settings')}\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\tclassName=\"ratingButton\"\n\t\t\t\t\t\tbefore={<Icon28GraphOutline width={41} height={41} style={{ color: \"white\" }} />}\n\t\t\t\t\tmode=\"outline\"\n\t\t\t\t\tsize=\"\"\n\t\t\t\t\tonClick={() => props.goToPage('Rating')}\n\t\t\t\t>\n\t\t\t\t\t<p style={{\n\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\tfontSize: 30,\n\t\t\t\t\t\tfontFamily: 'Neucha',\n\t\t\t\t\t}}></p>\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tclassName=\"aboutButton\"\n\t\t\t\t\tbefore={<Icon28ErrorOutline width={41} height={41} style={{ color: \"white\" }} />}\n\t\t\t\t\tmode=\"outline\"\n\t\t\t\t\tdata-to=\"persik\"\n\t\t\t\t\tsize=\"\"\n\t\t\t\t\tonClick={() => props.goToPage('Info')}\n\t\t\t\t>\n\t\t\t\t\t<p style={{\n\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\tfontSize: 30,\n\t\t\t\t\t\tfontFamily: 'Neucha',\n\t\t\t\t\t}}></p>\n\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t</Panel>\n)};\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { Panel, PanelHeader, PanelHeaderBack, Button, Progress, Div} from '@vkontakte/vkui/';\nimport Icon28PlaceOutline from '@vkontakte/icons/dist/28/place_outline';\nimport './Style.css';\n\nconst Play = (props) => {\n\tconst [leftCity, setStateLeftCity] = useState(\" \");\n\tconst [rightCity, setStateRightCity] = useState(\" \");\n\tconst [count, setStateCount] = useState(100);\n\tconst [timer, setStateTimer] = useState();\n\n\tconst [leftCityDictance, setStateleftCityDictance] = useState(\" \");\n\tconst [rightCityDictance, setStaterightCityDictance] = useState(\" \");\n\tconst [leftCityResponse, setStateleftCityResponse] = useState(0);\n\tconst [rightCityResponse, setStaterightCityResponse] = useState(0);\n\tconst [statusBackground, setStatestatusBackground] = useState(\"stage\");\n\tconst [isStartGame, setStateisStartGame] = useState(false)\n\tconst [isOverGame, setStateisOverGame] = useState(false)\n\tconst [isNextGame, setStateisNextGame] = useState(false)\n\tconst [timerId, setStatetimerId] = useState(\"timer\")\n\tconst [progressId, setStateprogressId] = useState(\"progressNone\")\n\tconst [resultId, setStateresultId] = useState(\"result\")\n\tconst [result, setStateresult] = useState()\n\n\tconst [userPostRes, setStateuserPostRes] = useState(false)\n\tconst [geoUser, setStateGeoUser] = useState(<br />);\n\tconst [leftButton, setStateLeftButton] = useState(props.left);\n\tconst [rightButton, setStateRightButton] = useState(props.right);\n\n\tconst [statusRightButton, setStateStatusRightButton] = useState('cityButtonRight')\n\tconst [statusLeftButton, setStateStatusLeftButton] = useState('cityButtonLeft')\n\n\tuseEffect(() => {\n\t\tstartGame()\n\t\tif (isNextGame === false) {\n\t\t\tsetStateisNextGame(true)\n\t\t} else {\n\n\t\t}\n\t}, []);\n\n\tconst nextGame = () => {\n\n\t\t\n\n\t\tif (isNextGame === false) {\n\t\t\tsetStateisNextGame(true)\n\t\t\tstartGame()\n\t\t} else {\n\n\t\t}\n\n\t}\n\t\n\n\tconst startGame = () => {\t\t\n\t\tsetStateStatusLeftButton('cityButtonLeft')\n\t\tsetStateStatusRightButton('cityButtonRight')\n\t\tsetStateTimer()\n\t\tsetStatetimerId(\"timer\")\n\t\tsetStateprogressId(\"progress\")\n\t\tsetStateresultId(\"resultNone\")\n\t\tsetStatestatusBackground(\"stage\")\n\t\tsetStateisOverGame(false)\n\t\tsetStateisStartGame(false)\n\t\tsetStaterightCityDictance();\n\t\tsetStateleftCityDictance();\n\t\tsetStateTimer();\n\t\tsetStateGeoUser(props.geolocation)\n\n\n\t\tconst timerId = setInterval(() => {\n\n\n\t\t\tvar randRight = Math.floor(Math.random() * rightButton.length);\n\t\t\tvar randLeft = Math.floor(Math.random() * leftButton.length);\n\t\t\tlet arrLeft = Object.fromEntries(leftButton[randLeft]);\n\t\t\tlet arrRight = Object.fromEntries(rightButton[randRight]);\n\t\t\tsetStateRightCity(arrRight.city)\n\t\t\tsetStateLeftCity(arrLeft.city)\n\n\t\t}, 30);\n\n\t\tsetTimeout(() => { clearInterval(timerId); countDown(); setStateisStartGame(true) }, 3000);\n\n\t}\n\n\tconst countDown = () => {\n\t\tvar randRightCity = Math.floor(Math.random() * rightButton.length);\n\t\tlet arrRight = Object.fromEntries(rightButton[randRightCity]);\n\n\t\tvar randLeftCity = Math.floor(Math.random() * leftButton.length);\n\t\tlet arrLeft = Object.fromEntries(leftButton[randLeftCity]);\n\n\t\tif (randRightCity === randLeftCity) {\n\t\t\tvar randRightCity = Math.floor(Math.random() * rightButton.length);\n\t\t\tlet arrRight = Object.fromEntries(rightButton[randRightCity]);\n\n\t\t\tvar randLeftCity = Math.floor(Math.random() * leftButton.length);\n\t\t\tlet arrLeft = Object.fromEntries(leftButton[randLeftCity]);\n\t\t\tsetStateRightCity(arrRight.city)\n\t\t\tsetStateLeftCity(arrLeft.city)\n\t\t} else {\n\t\t\t\n\t\t}\n\n\n\t\t\n\n\t\tsetStateRightCity(arrRight.city)\n\t\tsetStateLeftCity(arrLeft.city)\n\n\t\tfunction getDistanceFromLatLonInKmRight(lat4, lon4, lat8, lon8) {\n\t\t\tvar R1 = 6371;\n\t\t\tvar dLat1 = deg2rad(lat8 - lat4);\n\t\t\tvar dLon1 = deg2rad(lon8 - lon4);\n\t\t\tvar a1 =\n\t\t\t\tMath.sin(dLat1 / 2) * Math.sin(dLat1 / 2) +\n\t\t\t\tMath.cos(deg2rad(lat4)) * Math.cos(deg2rad(lat8)) *\n\t\t\t\tMath.sin(dLon1 / 2) * Math.sin(dLon1 / 2)\n\t\t\t\t;\n\t\t\tvar c1 = 2 * Math.atan2(Math.sqrt(a1), Math.sqrt(1 - a1));\n\t\t\tvar d1 = R1 * c1;\n\t\t\treturn d1;\n\t\t}\n\t\tfunction deg2rad(deg1) {\n\t\t\treturn deg1 * (Math.PI / 180)\n\t\t}\n\t\tsetStaterightCityResponse(+getDistanceFromLatLonInKmRight(props.position.split(',')[0], props.position.split(',')[1], arrRight.lat, arrRight.long).toFixed(0))\n\t\tfunction getDistanceFromLatLonInKmLeft(lat1, lon1, lat2, lon2) {\n\t\t\tvar R = 6371;\n\t\t\tvar dLat = deg2rad(lat2 - lat1);\n\t\t\tvar dLon = deg2rad(lon2 - lon1);\n\t\t\tvar a =\n\t\t\t\tMath.sin(dLat / 2) * Math.sin(dLat / 2) +\n\t\t\t\tMath.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) *\n\t\t\t\tMath.sin(dLon / 2) * Math.sin(dLon / 2)\n\t\t\t\t;\n\t\t\tvar c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\t\t\tvar d = R * c;\n\t\t\treturn d;\n\t\t}\n\n\t\tfunction deg2rad(deg) {\n\t\t\treturn deg * (Math.PI / 180)\n\t\t}\n\t\tsetStateleftCityResponse(+getDistanceFromLatLonInKmLeft(props.position.split(',')[0], props.position.split(',')[1], arrLeft.lat, arrLeft.long).toFixed(0))\n\n\t\tlet i = 100\n\t\tlet t = 4\n\t\tlet timerIdcountDown = setInterval(() => {\n\n\t\t\tsetStateTimer(\"Осталось \" + t-- + \" сек\")\n\n\t\t\tsetStateCount(i = i - 20)\n\n\t\t}, 1000);\n\n\t\tsetTimeout(() => {\n\t\t\tsetStateTimer(\"Не успели!\")\n\n\t\t\tsetStateisOverGame(true)\n\t\t\tsetStateisNextGame(false)\n\t\t\tclearInterval(timerIdcountDown);\n\t\t\tsetStateCount(100);\n\t\t\tsetStaterightCityDictance(getDistanceFromLatLonInKmRight(props.position.split(',')[0], props.position.split(',')[1], arrRight.lat, arrRight.long).toFixed(0) + \" км\");\n\t\t\tsetStateleftCityDictance(getDistanceFromLatLonInKmLeft(props.position.split(',')[0], props.position.split(',')[1], arrLeft.lat, arrLeft.long).toFixed(0) + \" км\");\n\t\t}, 4500);\n\t}\n\n\n\tconst userResponseLeft = () => {\n\n\t\n\t\t\n\t\t\n\t\tif (isOverGame === false) {\n\t\t\tif (isStartGame === true) {\n\t\t\t\tif (leftCityResponse < rightCityResponse) {\n\t\t\t\t\t\n\t\t\t\t\tbridge.send(\"VKWebAppStorageGet\", { \"keys\": [\"rating\"] })\n\t\t\t\t\t\t.then(data => {\n\t\t\t\t\t\t\t\tbridge.send(\"VKWebAppStorageSet\", { \"key\": \"rating\", \"value\": (leftCityResponse + parseInt(data.keys[0].value)) + ' км' });\n\t\t\t\t\t\t})\n\n\t\t\t\t\tlet timerIdcountDown = setInterval(() => {\n\t\t\t\t\t\tsetStaterightCityDictance(Math.floor(Math.random() * 15000) + \" км\");\n\t\t\t\t\t\tsetStateleftCityDictance(Math.floor(Math.random() * 15000) + \" км\");\n\t\t\t\t\t}, 30);\n\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t \n\t\t\t\t\t\tclearInterval(timerIdcountDown);\n\t\t\t\t\t\tsetStaterightCityDictance((rightCityResponse).toFixed(0) + \" км\");\n\t\t\t\t\t\tsetStateleftCityDictance((leftCityResponse).toFixed(0) + \" км\");\n\t\t\t\t\t\tsetStateresult(<h1 style={{ color: 'white', fontSize: 30, fontFamily: 'Neucha', textAlign: \"center\" }}>Вы ответили верно!</h1>)\n\t\t\t\t\t\tsetStateresultId(\"result\")\n\t\t\t\t\t\tsetStateStatusLeftButton('cityButtonLeftSucces')\n\n\t\t\t\t\t}, 2000);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\tlet timerIdcountDown = setInterval(() => {\n\t\t\t\t\t\tsetStaterightCityDictance(Math.floor(Math.random() * 15000) + \" км\");\n\t\t\t\t\t\tsetStateleftCityDictance(Math.floor(Math.random() * 15000) + \" км\");\n\t\t\t\t\t}, 30);\n\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tclearInterval(timerIdcountDown);\n\t\t\t\t\t\tsetStaterightCityDictance((rightCityResponse).toFixed(0) + \" км\");\n\t\t\t\t\t\tsetStateleftCityDictance((leftCityResponse).toFixed(0) + \" км\");\n\t\t\t\t\t\tsetStateresult(<h1 style={{ color: 'white', fontSize: 30, fontFamily: 'Neucha', textAlign: \"center\" }}>Ответ неправильный!</h1>)\t\t\n\t\t\t\t\t\tsetStateresultId(\"result\")\n\t\t\t\t\t\tsetStateStatusLeftButton('cityButtonLeftError')\n\t\t\t\t\t}, 2000);\n\t\t\t\t\t\n\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tsetStateisOverGame(true)\n\t\t\t\tsetStateuserPostRes(true)\n\t\t\t\tsetStatetimerId(\"timerNone\")\n\t\t\t\tsetStateprogressId(\"progressNone\")\n\t\t\t} else {\n\n\t\t\t}\n\t\t} else {\n\n\t\t}\n\n\n\n\t}\n\tconst userResponseRight = () => {\n\n\n\t\t\n\t\t\n\t\tif (isOverGame === false) {\n\t\t\tif (isStartGame === true) {\n\t\t\t\tif (leftCityResponse > rightCityResponse) {\n\t\t\t\t\tbridge.send(\"VKWebAppStorageGet\", { \"keys\": [\"rating\"] })\n\t\t\t\t\t\t.then(data => {\n\t\t\t\t\n\t\t\t\t\t\t\tbridge.send(\"VKWebAppStorageSet\", { \"key\": \"rating\", \"value\": (rightCityResponse + parseInt(data.keys[0].value)) + ' км' });\n\n\t\t\t\t\t\t})\n\t\t\t\t\tlet timerIdcountDown = setInterval(() => {\n\t\t\t\t\t\tsetStaterightCityDictance(Math.floor(Math.random() * 15000) + \" км\");\n\t\t\t\t\t\tsetStateleftCityDictance(Math.floor(Math.random() * 15000) + \" км\");\n\t\t\t\t\t}, 30);\n\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tclearInterval(timerIdcountDown);\n\t\t\t\t\t\tsetStaterightCityDictance((rightCityResponse).toFixed(0) + \" км\");\n\t\t\t\t\t\tsetStateleftCityDictance((leftCityResponse).toFixed(0) + \" км\");\n\t\t\t\t\t\tsetStateresult(<h1 style={{ color: 'white', fontSize: 30, fontFamily: 'Neucha', textAlign: \"center\" }}>Вы ответили верно!</h1>)\n\t\t\t\t\t\tsetStateresultId(\"result\")\n\t\t\t\t\t\tsetStateStatusRightButton('cityButtonRightSucces')\n\n\t\t\t\t\t}, 2000);\n\n\t\t\t\t} else {\n\t\t\t\t\tlet timerIdcountDown = setInterval(() => {\n\t\t\t\t\t\tsetStaterightCityDictance(Math.floor(Math.random() * 15000) + \" км\");\n\t\t\t\t\t\tsetStateleftCityDictance(Math.floor(Math.random() * 15000) + \" км\");\n\t\t\t\t\t}, 30);\n\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tclearInterval(timerIdcountDown);\n\t\t\t\t\t\tsetStaterightCityDictance((rightCityResponse).toFixed(0) + \" км\");\n\t\t\t\t\t\tsetStateleftCityDictance((leftCityResponse).toFixed(0) + \" км\");\n\t\t\t\t\t\tsetStateresult(<h1 style={{ color: 'white', fontSize: 30, fontFamily: 'Neucha', textAlign: \"center\"}}>Ответ неправильный!</h1>)\n\t\t\t\t\t\tsetStateresultId(\"result\")\n\t\t\t\t\t\tsetStateStatusRightButton('cityButtonLeftError')\n\t\t\t\t\t}, 2000);\n\n\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tsetStateisOverGame(true)\n\t\t\t\tsetStateuserPostRes(true)\n\t\t\t\tsetStatetimerId(\"timerNone\")\n\t\t\t\tsetStateprogressId(\"progressNone\")\n\n\t\t\t} else {\n\n\t\t\t}\n\t\t} else {\n\n\t\t}\n\n\n\t}\n\n\n\treturn (\n\t\t<Panel id={props.id} separator={false}>\n\t\t\t<PanelHeader left={<PanelHeaderBack onClick={() => window.history.back()} />}>\n\t\t\t</PanelHeader>\n\t\t\t<div className='stage'>\n\t\t\t\t<ul class=\"circles\">\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\n\t\t\t\t</ul>\n\n\n\t\t\t\t<div className=\"topBlock\">\n\t\t\t\t\t<div className=\"titlePlay\" style={{ color: \"white\", fontSize: 25, fontFamily: 'Neucha' }}>\n\t\t\t\t\t\t{props.title}</div>\n\t\t\t\t\t<Icon28PlaceOutline className=\"iconPlace\" width={25} height={25} />\n\t\t\t\t\t<div className=\"earth\"></div>\n\t\t\t\t\t<Div className=\"userCityName\"><h1 style={{ color: \"white\", fontSize: 15, fontFamily: 'Neucha', textAlign: \"center\" }}>{geoUser}</h1></Div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"blockCities\">\n\t\t\t\t\t<div className=\"cityDivLeft\"><Button className={statusLeftButton} onClick={userResponseLeft} size=\"l\" mode=\"outline\" style={{ color: \"white\", fontFamily: 'Neucha', textAlign: \"center\" }}><h3>{leftCity}<br />{leftCityDictance}</h3></Button></div>\n\t\t\t\t\t<div className=\"cityDivRight\"><Button className={statusRightButton} onClick={userResponseRight} size=\"l\" mode=\"outline\" style={{ color: \"white\", fontFamily: 'Neucha', textAlign: \"center\" }}><h3>{rightCity}<br />{rightCityDictance}</h3></Button></div>\n\t\t\t\t</div>\n\n\n\t\t\t\t<div className=\"blockProgress\">\n\t\t\t\t\t<div className=\"progressItems\">\n\t\t\t\t\t\t<div className={resultId}>{result}</div>\n\n\t\t\t\t\t\t<div className={progressId}><Progress style={{ background: \"red\" }} value={count} />\n\t\t\t\t\t\t\t<div className={timerId}><h1 style={{ color: \"white\", fontSize: 30, fontFamily: 'Neucha', textAlign: \"center\" }}>{timer}</h1></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"nextDivLevel\"><Button className=\"nextButtonLevel\" onClick={nextGame} size=\"l\" mode=\"outline\" ><h1 style={{ color: \"white\", fontFamily: 'Neucha', textAlign: \"center\", fontSize: 27 }}>Далее</h1></Button></div>\n\t\t\t\t\t</div>\n\n\n\t\t\t\t</div>\n\n\n\t\t\t</div>\n\t\t</Panel>\n\t)\n\n};\n\nexport default Play;","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { Panel, PanelHeader, List, Div, Cell, PanelHeaderBack, Button, Group, Header} from '@vkontakte/vkui/';\nimport Icon28PlaceOutline  from '@vkontakte/icons/dist/28/place_outline';\nimport './Style.css';\n\nconst Settings = (props) => {\n\n\tconst [lengthSearch, setStateLengthSearch] = useState(0)\n\tconst [checkClick, setStateCheckClick] = useState(false)\n\n\tconst [descriptionAdress0, setStateDescriptionAdress0] = useState('')\n\tconst [nameAdress0, setStateNameAdress0] = useState()\n\tconst [position0, setStatePosition0] = useState()\n\n\tconst [descriptionAdress1, setStateDescriptionAdress1] = useState('')\n\tconst [nameAdress1, setStateNameAdress1] = useState()\n\tconst [position1, setStatePosition1] = useState()\n\n\t\n\tconst [descriptionAdress2, setStateDescriptionAdress2] = useState()\n\tconst [nameAdress2, setStateNameAdress2] = useState()\n\tconst [position2, setStatePosition2] = useState()\n\n\tconst [description0, setStateDescription0] = useState('Предпочтительнее выбрать место своего проживания.')\n\tconst [description1, setStateDescription1] = useState('Внимание, на устройстве должны быть включены службы геолокации.')\n\n\tconst [chooseGeo0, setStateChooseGeo0] = useState()\n\tconst [chooseGeo1, setStateChooseGeo1] = useState()\n\n\tconst [chooseDescription, setStateChooseDescription] = useState()\n\tconst [chooseName, setStateChooseName] = useState()\n\n\t\n\n\t\n\tuseEffect(() => {\n\t\tbridge.send(\"VKWebAppStorageGet\", { \"keys\": [\"geo\", \"pos\"] })\n\t\t\t.then(data => {\n\t\t\t\tsetStateChooseGeo1(data.keys[1].value)\n\t\t\t\tsetStateChooseGeo0(data.keys[0].value)\n\t\t\t})\n\t}, []);\n\t\n\n\tconst searchChange = () =>  {\n\t\tsetStateLengthSearch(document.getElementById('search').value.length)\n\t\tconst key = `c16841d0-5344-4254-a4fd-32e30927fa2a`;\n\t\tconst api = `https://geocode-maps.yandex.ru/1.x/?format=json&geocode=${document.getElementById('search').value}&apikey=${key}`;\n\n\t\tfetch(api)\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\tsetStateCheckClick(false)\n\t\t\t\tsetStateNameAdress0((data.response.GeoObjectCollection.featureMember[0]).GeoObject.name)\n\t\t\t\tsetStatePosition0((data.response.GeoObjectCollection.featureMember[0]).GeoObject.Point.pos.split(' ').reverse())\n\t\t\t\tsetStateDescriptionAdress0((data.response.GeoObjectCollection.featureMember[0]).GeoObject.description)\n\t\t\t\tsetStateNameAdress1((data.response.GeoObjectCollection.featureMember[1]).GeoObject.name)\n\t\t\t\tsetStatePosition1((data.response.GeoObjectCollection.featureMember[1]).GeoObject.Point.pos.split(' ', 2).reverse())\n\t\t\t\tsetStateDescriptionAdress1((data.response.GeoObjectCollection.featureMember[1]).GeoObject.description)\n\t\t\t\tsetStateNameAdress2((data.response.GeoObjectCollection.featureMember[2]).GeoObject.name)\n\t\t\t\tsetStateDescriptionAdress2((data.response.GeoObjectCollection.featureMember[2]).GeoObject.description)\n\t\t\t\tsetStatePosition2((data.response.GeoObjectCollection.featureMember[2]).GeoObject.Point.pos.split(' ', 2).reverse())\n\t\t\t})\n\n\t\t\t.catch(e => {\n\t\t\t})\t\n\t}\n\n\tconst getPosition0 = () => {\n\t\t\n\t\tif (descriptionAdress0 === undefined || descriptionAdress0 === '') {\n\t\t\tsetStateChooseGeo0()\n\t\t\tsetStateDescription0('Ошибка при получении данные, воспользуйтесь GPS.')\n\t\t\tdocument.getElementById('search').value = ''\n\t\t\tsetStateLengthSearch(0)\n\t\t}\n\t\telse {\n\t\t\tsetStateDescription0('Расстояние до городов/стран будет рассчитываться относительно этого места.')\n\t\t\tsetStateDescription1('Внимание, на устройстве должны быть включены службы геолокации.')\n\t\t\tsetStateChooseGeo0(`${descriptionAdress0}, ${nameAdress0}.`)\n\t\t\tsetStateChooseGeo1()\n\t\t\tdocument.getElementById('search').value = ''\n\t\t\tsetStateChooseDescription(descriptionAdress0)\n\t\t\tsetStateChooseName(nameAdress0)\n\t\t\tsetStateLengthSearch(0)\n\t\t\tsetStateNameAdress0()\n\t\t\tsetStateDescriptionAdress0()\n\t\t\tsetStateNameAdress1()\n\t\t\tsetStateDescriptionAdress1()\n\t\t\tsetStateNameAdress2()\n\t\t\tsetStateDescriptionAdress2()\n\t\t\tprops.savePositionGlobal(`${position0}`, `${descriptionAdress0}, ${nameAdress0}`)\n\t\t}\n\n\t}\n\tconst getPosition1 = () => {\n\t\t\n\t\tif (descriptionAdress1 === undefined || descriptionAdress1 === '') {\n\t\t\tsetStateChooseGeo0()\n\t\t\tsetStateDescription0('Ошибка при получении данные, воспользуйтесь GPS.')\n\t\t\tdocument.getElementById('search').value = ''\n\t\t\tsetStateLengthSearch(0)\n\t\t}\n\t\telse {\n\t\t\tsetStateDescription0('Расстояние до городов/стран будет рассчитываться относительно этого места.')\n\t\t\tsetStateDescription1('Внимание, на устройстве должны быть включены службы геолокации.')\n\t\t\tsetStateChooseGeo0(`${descriptionAdress0}, ${nameAdress0}.`)\n\t\t\tsetStateChooseGeo1()\n\t\t\tdocument.getElementById('search').value = ''\n\t\t\tsetStateChooseDescription(descriptionAdress1)\n\t\t\tsetStateChooseName(nameAdress1)\n\t\t\tsetStateLengthSearch(0)\n\t\t\tsetStateNameAdress0()\n\t\t\tsetStateDescriptionAdress0()\n\t\t\tsetStateNameAdress1()\n\t\t\tsetStateDescriptionAdress1()\n\t\t\tsetStateNameAdress2()\n\t\t\tsetStateDescriptionAdress2()\n\t\t\tprops.savePositionGlobal(`${position1}`, `${descriptionAdress1}, ${nameAdress1}`)\n\t\t}\n\n\t}\n\tconst getPosition2 = () => {\n\t\t\n\t\tif (descriptionAdress2 === undefined || descriptionAdress2 === '') {\n\t\t\tsetStateDescription0('Ошибка при получении данных, воспользуйтесь GPS.')\n\t\t\tsetStateChooseGeo0()\n\t\t\tdocument.getElementById('search').value = ''\n\t\t\tsetStateLengthSearch(0)\n\t\t}\n\t\telse {\n\t\t\tsetStateDescription0('Расстояние до городов/стран будет рассчитываться относительно этого места.')\n\t\t\tsetStateDescription1('Внимание, на устройстве должны быть включены службы геолокации.')\n\t\t\tsetStateChooseGeo0(`${descriptionAdress0}, ${nameAdress0}.`)\n\t\t\tsetStateChooseGeo1()\n\t\t\tdocument.getElementById('search').value = ''\n\t\t\tsetStateChooseDescription(descriptionAdress2)\n\t\t\tsetStateChooseName(nameAdress2)\n\t\t\tsetStateLengthSearch(0)\n\t\t\tsetStateNameAdress0()\n\t\t\tsetStateDescriptionAdress0()\n\t\t\tsetStateNameAdress1()\n\t\t\tsetStateDescriptionAdress1()\n\t\t\tsetStateNameAdress2()\n\t\t\tsetStateDescriptionAdress2()\n\t\t\tprops.savePositionGlobal(`${position2}`, `${descriptionAdress2}, ${nameAdress2}`)\n\t\t}\n\t}\n\n\tconst getPositionWithGps = () => {\n\n\t\tbridge.send(\"VKWebAppGetGeodata\")\n\t\t\t.then(data => {\n\n\t\t\t\tif (data.lat === undefined) {\n\t\t\t\t\tsetStateDescription1('Данные не получены. Попробуйте включить службы геопозиции в самом устройстве.')\n\t\t\t\t} else {\n\t\t\t\t\tsetStateDescription0('Предпочтительнее выбрать место своего проживания..')\n\t\t\t\t\tsetStateDescription1('Расстояние до городов/стран будет рассчитываться относительно этой точки.')\n\t\t\t\t\tsetStateChooseGeo0()\n\t\t\t\t\tsetStateChooseGeo1(`Широта - ${(data.lat).toFixed(5)}, долгота - ${(data.long).toFixed(5)}`)\n\t\t\t\t\tprops.savePositionGlobal(`${data.lat},${data.long}`, `Широта - ${(data.lat).toFixed(5)}. Долгота - ${(data.long).toFixed(5)}.`)\n\t\t\t\t}\n\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tsetStateDescription1('Данные не получены. Дайте разрешение на использование геоданных или выберите город/населенный пункт через поиск выше.')\n\t\t\t})\n\n\t}\n\tconst changeLevel = () => {\n\t\tprops.changeLevel()\n\t}\n\n\treturn (\n\n\t<Panel id={props.id} separator={false}>\n            <PanelHeader left={<PanelHeaderBack onClick={() => window.history.back()} />}>\n\t\t\tНастройки\n        </PanelHeader>\n\t\t<div className='stage'>\n\t\t\n<div style={{position: 'relative', marginTop: '18vh'}}>\n\t\t\t\t<Group header={\n\t\t\t\t\t<Header>Выберите город/населенный пункт</Header>}>\n\t\t\t\t\t\t<Div><label class=\"pure-material-textfield-outlined\">\n\t\t\t\t\t\t\t<input id='search' onChange={ () => searchChange ()} placeholder=\" \"/>\n\t\t\t\t\t\t\t\t<span>Поиск</span>\n</label>\n\t\t\t\t\t\t\t</Div>\n\t\t\t\t\t\t{lengthSearch > 0 ? (\n\t\t\t\t\t\t\t<List >\n\t\t\t\t\t\t\t\t<Cell multiline={true}\n\t\t\t\t\t\t\t\t\tdescription={descriptionAdress0}\n\t\t\t\t\t\t\t\t\tonClick={() => getPosition0()}>\n\t\t\t\t\t\t\t\t\t{nameAdress0}\n\n\t\t\t\t\t\t\t\t</Cell>\n\t\t\t\t\t\t\t\t<Cell multiline={true}\n\t\t\t\t\t\t\t\t\tdescription={descriptionAdress1}\n\t\t\t\t\t\t\t\t\tonClick={() => getPosition1()}>\n\t\t\t\t\t\t\t\t\t{nameAdress1}\n\t\t\t\t\t\t\t\t</Cell>\n\t\t\t\t\t\t\t\t<Cell multiline={true}\n\t\t\t\t\t\t\t\t\tdescription={descriptionAdress2}\n\t\t\t\t\t\t\t\t\tonClick={() => getPosition2()}>\n\t\t\t\t\t\t\t\t\t{nameAdress2}\n\t\t\t\t\t\t\t\t</Cell>\n\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<Cell multiline={true}\n\t\t\t\t\t\t\tdescription={description0}>\n\t\t\t\t\t\t\t{chooseGeo0}\n\t\t\t\t\t\t\t\t</Cell>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t</Group>\n\t\t\t<Group header={\n\t\t\t\t<Header>Или воспользуйтесь GPS</Header>}>\n\t\t\t\t<Div>\n\t\t\t\t\t\t\t<Button before={<Icon28PlaceOutline style={{ color: \"white\" }} />} onClick={() => getPositionWithGps()} size='xl' mode='outline'>Получить геоданные</Button></Div>\n\t\t\t\t<Cell description={description1} multiline={true}>\n\t\t\t\t\t\t\t{chooseGeo1} \n\t\t\t\t\t</Cell>\n\t\t\t</Group>\n\t\t\t\t</div>\n\t\t\t</div>\n    </Panel>\n\t)};\n\nexport default Settings;\n\n\n\n\n\n","import React, { useEffect, useState } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { Panel, PanelHeader, Separator, Div, PanelHeaderBack, Cell, Button, Avatar, Group, Header} from '@vkontakte/vkui/';\nimport Icon28ShareOutline from '@vkontakte/icons/dist/28/share_outline';\n\nconst Rating = (props) => {\n\n\tconst [photo, setStatePhoto] = useState()\n\tconst [userName, setStateUserName] = useState()\n\tconst [rating, setStateRating] = useState(0)\n\n\tuseEffect(() => {\n\t\tbridge.send(\"VKWebAppStorageGet\", { \"keys\": [\"rating\"] })\n\t\t\t.then(data => {\n\t\t\t\tconsole.log(data.keys[0].value);\n\n\t\t\t\tif (data.keys[0].value === '') {\n\t\t\t\t\tsetStateRating(0 + ' км')\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsetStateRating(data.keys[0].value)\n\t\t\t\t}\n\t\t\t})\n\n\t\tbridge.send(\"VKWebAppGetUserInfo\")\n\t\t\t.then(data => {\n\t\t\t\tsetStatePhoto(data.photo_200)\n\t\t\t\tsetStateUserName(data.first_name + ' ' + data.last_name)\n\t\t\t})\n\n\t}, [])\n\n\n\treturn (\n\n\t\t<Panel id={props.id} separator={false}>\n\t\t\t<PanelHeader left={<PanelHeaderBack onClick={() => window.history.back()} />}>\n\t\t\t\tСтатистика\n        </PanelHeader>\n\t\t\t<div className='stage'>\n\t\t\t\t<ul class=\"circles\">\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\n\t\t\t\t</ul>\n\t\t\t\t<div style={{ position: 'relative', marginTop: '18vh' }}>\n\t\t\t\t\t<Group header={\n\t\t\t\t\t\t<Header>Мои результаты</Header>}>\n\n\t\t\t\t\t\t<Cell before={<Avatar mode=\"app\" src={photo} />} description={'Отгадано: ' + `${rating}`} multiline={true}>\n\t\t\t\t\t\t\t{userName}\n\t\t\t\t\t\t</Cell>\n\t\t\t\t\t\t<Separator/>\n\t\t\t\t\t\t<Div>\n\t\t\t\t\t\t\t<Button mode='outline' before={<Icon28ShareOutline style={{ color: \"white\" }} />} size='xl' onClick={() => bridge.send(\"VKWebAppShare\", { \"link\": \"https://vk.com/app7612376\" })}>Поделиться приложением</Button>\n\t\t\t\t\t\t</Div>\n\t\t\t\t\t</Group>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Panel>\n\t)\n};\n\nexport default Rating;\n\n\n\n\n\n","import React from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { Panel, PanelHeader, Div, PanelHeaderBack, Cell, Button, Avatar, Group, Header} from '@vkontakte/vkui/';\nimport AvatarApp from '../img/AvatarApp.png'\n\nconst Info = (props) => {\n\t\n\treturn (\n\n\t\t<Panel id={props.id} separator={false}>\n\t\t\t<PanelHeader left={<PanelHeaderBack onClick={() => window.history.back()} />}>\n\t\t\t\tИнформация\n        </PanelHeader>\n\t\t\t<div className='stage'>\n\t\t\t\t<ul class=\"circles\">\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\t\t\t\t\t<li></li>\n\n\t\t\t\t</ul>\n\t\t\t\t<div style={{ position: 'relative', marginTop: '18vh' }}>\n\t\t\t\t\t<Group header={\n\t\t\t\t\t\t<Header>Техническая информация</Header>}>\n\n\t\t\t\t\t\t<Cell before={<Avatar mode=\"app\" src={AvatarApp} />} description='Последнее обновление 04.10.2020. На данный момент доступно 197 стран и 297 городов России.' multiline={true}>\n\t\t\t\t\t\t\tВерсия 1.0.0\n\t\t\t\t\t\t</Cell>\n\t\t\t\t\t</Group>\n\t\t\t\t\t<Group header={\n\t\t\t\t\t\t<Header>Сообщество Вконтакте</Header>}>\n\n\t\t\t\t\t\t<Cell href='https://vk.com/club199216189' target=\"_blank\" before={<Avatar mode=\"app\" src={AvatarApp} />} description='Mini Apps' multiline={true}>\n\t\t\t\t\t\t\tTowner\n\t\t\t\t\t\t</Cell>\n\t\t\t\t\t\t<Div>\n\t\t\t\t\t\t\t<Button mode='outline' size='xl' onClick={() => bridge.send(\"VKWebAppJoinGroup\", { \"group_id\": 199216189 })}>Подписаться на сообщество</Button>\n\t\t\t\t\t\t</Div>\n\t\t\t\t\t\t\n\t\t\t\t\t</Group>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Panel>\n\t)\n};\n\nexport default Info;\n\n\n\n\n\n","import React, { useState } from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport { Panel, PanelHeader, List, Div, Cell, PanelHeaderBack, Button, Group, Header } from '@vkontakte/vkui/';\r\nimport Icon28PlaceOutline from '@vkontakte/icons/dist/28/place_outline';\r\nimport './Style.css';\r\n\r\n\r\nconst Settings = (props) => {\r\n\r\n    const [lengthSearch, setStateLengthSearch] = useState(0)\r\n    const [checkClick, setStateCheckClick] = useState(false)\r\n\r\n    const [descriptionAdress0, setStateDescriptionAdress0] = useState('')\r\n    const [nameAdress0, setStateNameAdress0] = useState()\r\n    const [position0, setStatePosition0] = useState()\r\n\r\n    const [descriptionAdress1, setStateDescriptionAdress1] = useState('')\r\n    const [nameAdress1, setStateNameAdress1] = useState()\r\n    const [position1, setStatePosition1] = useState()\r\n\r\n\r\n    const [descriptionAdress2, setStateDescriptionAdress2] = useState()\r\n    const [nameAdress2, setStateNameAdress2] = useState()\r\n    const [position2, setStatePosition2] = useState()\r\n\r\n    const [description0, setStateDescription0] = useState('Предпочтительнее выбрать место своего проживания.')\r\n    const [description1, setStateDescription1] = useState('Внимание, на устройстве должны быть включены службы геолокации.')\r\n    const [description2, setStateDescription2] = useState()\r\n\r\n    const [chooseGeo0, setStateChooseGeo0] = useState()\r\n    const [chooseGeo1, setStateChooseGeo1] = useState()\r\n\r\n    const [chooseDescription, setStateChooseDescription] = useState()\r\n    const [chooseName, setStateChooseName] = useState()\r\n\r\n\r\n\r\n\r\n\r\n    const searchChange = () => {\r\n        setStateLengthSearch(document.getElementById('search').value.length)\r\n        const key = `c16841d0-5344-4254-a4fd-32e30927fa2a`;\r\n        const api = `https://geocode-maps.yandex.ru/1.x/?format=json&geocode=${document.getElementById('search').value}&apikey=${key}`;\r\n\r\n        fetch(api)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setStateCheckClick(false)\r\n                setStateNameAdress0((data.response.GeoObjectCollection.featureMember[0]).GeoObject.name)\r\n                setStatePosition0((data.response.GeoObjectCollection.featureMember[0]).GeoObject.Point.pos.split(' ').reverse())\r\n                setStateDescriptionAdress0((data.response.GeoObjectCollection.featureMember[0]).GeoObject.description)\r\n                setStateNameAdress1((data.response.GeoObjectCollection.featureMember[1]).GeoObject.name)\r\n                setStatePosition1((data.response.GeoObjectCollection.featureMember[1]).GeoObject.Point.pos.split(' ', 2).reverse())\r\n                setStateDescriptionAdress1((data.response.GeoObjectCollection.featureMember[1]).GeoObject.description)\r\n                setStateNameAdress2((data.response.GeoObjectCollection.featureMember[2]).GeoObject.name)\r\n                setStateDescriptionAdress2((data.response.GeoObjectCollection.featureMember[2]).GeoObject.description)\r\n                setStatePosition2((data.response.GeoObjectCollection.featureMember[2]).GeoObject.Point.pos.split(' ', 2).reverse())\r\n            })\r\n\r\n            .catch(e => {\r\n            })\r\n    }\r\n\r\n    const getPosition0 = () => {\r\n\r\n        if (descriptionAdress0 === undefined || descriptionAdress0 === '') {\r\n            setStateChooseGeo0()\r\n            setStateDescription0('Ошибка при получении данные, воспользуйтесь GPS.')\r\n            document.getElementById('search').value = ''\r\n            setStateLengthSearch(0)\r\n        }\r\n        else {\r\n            setStateDescription0('Расстояние до городов/стран будет рассчитываться относительно этого места.')\r\n            setStateDescription1('Внимание, на устройстве должны быть включены службы геолокации.')\r\n            setStateChooseGeo0(`${descriptionAdress0}, ${nameAdress0}.`)\r\n            setStateChooseGeo1()\r\n            document.getElementById('search').value = ''\r\n            setStateChooseDescription(descriptionAdress0)\r\n            setStateChooseName(nameAdress0)\r\n            setStateLengthSearch(0)\r\n            setStateNameAdress0()\r\n            setStateDescriptionAdress0()\r\n            setStateNameAdress1()\r\n            setStateDescriptionAdress1()\r\n            setStateNameAdress2()\r\n            setStateDescriptionAdress2()\r\n            props.savePositionGlobal(`${position0}`, `${descriptionAdress0}, ${nameAdress0}`)\r\n            props.goToPage('Home')\r\n        }\r\n\r\n    }\r\n    const getPosition1 = () => {\r\n\r\n        if (descriptionAdress1 === undefined || descriptionAdress1 === '') {\r\n            setStateChooseGeo0()\r\n            setStateDescription0('Ошибка при получении данные, воспользуйтесь GPS.')\r\n            document.getElementById('search').value = ''\r\n            setStateLengthSearch(0)\r\n        }\r\n        else {\r\n            setStateDescription0('Расстояние до городов/стран будет рассчитываться относительно этого места.')\r\n            setStateDescription1('Внимание, на устройстве должны быть включены службы геолокации.')\r\n            setStateChooseGeo0(`${descriptionAdress0}, ${nameAdress0}.`)\r\n            setStateChooseGeo1()\r\n            document.getElementById('search').value = ''\r\n            setStateChooseDescription(descriptionAdress1)\r\n            setStateChooseName(nameAdress1)\r\n            setStateLengthSearch(0)\r\n            setStateNameAdress0()\r\n            setStateDescriptionAdress0()\r\n            setStateNameAdress1()\r\n            setStateDescriptionAdress1()\r\n            setStateNameAdress2()\r\n            setStateDescriptionAdress2()\r\n            props.savePositionGlobal(`${position1}`, `${descriptionAdress1}, ${nameAdress1}`)\r\n            props.goToPage('Home')\r\n        }\r\n\r\n    }\r\n    const getPosition2 = () => {\r\n\r\n        if (descriptionAdress2 === undefined || descriptionAdress2 === '') {\r\n            setStateDescription0('Ошибка при получении данные, воспользуйтесь GPS.')\r\n            setStateChooseGeo0()\r\n            document.getElementById('search').value = ''\r\n            setStateLengthSearch(0)\r\n        }\r\n        else {\r\n            setStateDescription0('Расстояние до городов/стран будет рассчитываться относительно этого места.')\r\n            setStateDescription1('Внимание, на устройстве должны быть включены службы геолокации.')\r\n            setStateChooseGeo0(`${descriptionAdress0}, ${nameAdress0}.`)\r\n            setStateChooseGeo1()\r\n            document.getElementById('search').value = ''\r\n            setStateChooseDescription(descriptionAdress2)\r\n            setStateChooseName(nameAdress2)\r\n            setStateLengthSearch(0)\r\n            setStateNameAdress0()\r\n            setStateDescriptionAdress0()\r\n            setStateNameAdress1()\r\n            setStateDescriptionAdress1()\r\n            setStateNameAdress2()\r\n            setStateDescriptionAdress2()\r\n            props.savePositionGlobal(`${position2}`, `${descriptionAdress2}, ${nameAdress2}`)\r\n            props.goToPage('Home')\r\n        }\r\n    }\r\n\r\n    const getPositionWithGps = () => {\r\n\r\n        bridge.send(\"VKWebAppGetGeodata\")\r\n            .then(data => {\r\n\r\n                if (data.lat === undefined) {\r\n                    setStateDescription1('Данные не получены. Попробуйте включить службы геопозиции в самом устройстве.')\r\n                } else {\r\n                    setStateDescription0('Предпочтительнее выбрать место своего проживания.')\r\n                    setStateDescription1('Расстояние до городов/стран будет рассчитываться относительно этого места.')\r\n                    setStateChooseGeo0()\r\n                    setStateChooseGeo1(`Широта - ${(data.lat).toFixed(5)}, долгота - ${(data.long).toFixed(5)}`)\r\n                    props.savePositionGlobal(`${data.lat},${data.long}`, `Широта - ${(data.lat).toFixed(5)}. Долгота - ${(data.long).toFixed(5)}.`)\r\n                    props.goToPage('Home')\r\n\r\n                }\r\n\r\n            })\r\n            .catch(error => {\r\n                setStateDescription1('Данные не получены. Дайте разрешение на использование геоданных или выберите город/населенный пункт через поиск выше.')\r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <Panel id={props.id} separator={false}>\r\n            \r\n            <div className='stage'>\r\n              \r\n                <div style={{ position: 'relative', marginTop: '18vh' }}>\r\n                <Div style={{textAlign: 'center'}}><h3>Для продолжения укажите свое местоположение</h3></Div>\r\n                    <Group style={{ position: 'relative', marginTop: '-6%' }} header={\r\n                        <Header>Выберите город/населенный пункт</Header>}>\r\n                        <Div><label class=\"pure-material-textfield-outlined\">\r\n                            <input id='search' onChange={() => searchChange()} placeholder=\" \" />\r\n                            <span>Поиск</span>\r\n                        </label>\r\n                        </Div>\r\n                        {lengthSearch > 0 ? (\r\n                            <List >\r\n                                <Cell multiline={true}\r\n                                    description={descriptionAdress0}\r\n                                    onClick={() => getPosition0()}>\r\n                                    {nameAdress0}\r\n\r\n                                </Cell>\r\n                                <Cell multiline={true}\r\n                                    description={descriptionAdress1}\r\n                                    onClick={() => getPosition1()}>\r\n                                    {nameAdress1}\r\n                                </Cell>\r\n                                <Cell multiline={true}\r\n                                    description={descriptionAdress2}\r\n                                    onClick={() => getPosition2()}>\r\n                                    {nameAdress2}\r\n                                </Cell>\r\n                            </List>\r\n                        ) : (\r\n                                <Cell multiline={true}\r\n                                    description={description0}>\r\n                                    {chooseGeo0}\r\n                                </Cell>\r\n                            )}\r\n\r\n                    </Group>\r\n                    <Group header={\r\n                        <Header>Или воспользуйтесь GPS</Header>}>\r\n                        <Div>\r\n                            <Button mode='outline' before={<Icon28PlaceOutline style={{ color: \"white\" }} />} onClick={() => getPositionWithGps()} size='xl'>Получить геоданные</Button></Div>\r\n                        <Cell description={description1} multiline={true}>\r\n                            {chooseGeo1}\r\n                        </Cell>\r\n                    </Group>\r\n                </div>\r\n            </div>\r\n        </Panel>\r\n    )\r\n};\r\n\r\nexport default Settings;\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ConfigProvider from '@vkontakte/vkui/dist/components/ConfigProvider/ConfigProvider';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport Icon24Fullscreen from '@vkontakte/icons/dist/24/fullscreen';\nimport Icon24FullscreenExit from '@vkontakte/icons/dist/24/fullscreen_exit';\nimport Loader from './panels/Loader';\nimport Intro from './panels/Intro';\nimport Home from './panels/Home';\nimport Play from './panels/Play';\nimport Settings from './panels/Settings';\nimport Rating from './panels/Rating';\nimport Info from './panels/Info';\nimport Warning from './panels/Warning';\n\nconst lights = ['bright_light', 'client_light'];\nconst arrCountryRight = [[[\"city\", \"Австралия\"], [\"lat\", -35.5], [\"long\", 149]], [[\"city\", \"Австрия\"], [\"lat\", 47.333328], [\"long\", 13.33333]], [[\"city\", \"Азербайджан\"], [\"lat\", 40.5], [\"long\", 47.5]], [[\"city\", \"Албания\"], [\"lat\", 42.304482], [\"long\", 2.72135]], [[\"city\", \"Алжир\"], [\"lat\", 28], [\"long\", 3]], [[\"city\", \"Ангола\"], [\"lat\", -12.5], [\"long\", 43969]], [[\"city\", \"Андорра\"], [\"lat\", 42.5], [\"long\", 43952]], [[\"city\", \"Антигуа\"], [\"lat\", 17.049999], [\"long\", -61.799999]], [[\"city\", \"Аргентина\"], [\"lat\", -31.383329], [\"long\", -64.066673]], [[\"city\", \"Армения\"], [\"lat\", 40], [\"long\", 45]], [[\"city\", \"Афганистан\"], [\"lat\", 33], [\"long\", 66]], [[\"city\", \"Багамские острова\"], [\"lat\", 25.040819], [\"long\", -77.371223]], [[\"city\", \"Бангладеш\"], [\"lat\", 24], [\"long\", 90]], [[\"city\", \"Барбадос\"], [\"lat\", 13.16667], [\"long\", -59.533329]], [[\"city\", \"Бахрейн\"], [\"lat\", 26], [\"long\", 50.5]], [[\"city\", \"Белиз\"], [\"lat\", 17.25], [\"long\", -88.75]], [[\"city\", \"Белоруссия\"], [\"lat\", 53], [\"long\", 28]], [[\"city\", \"Бельгия\"], [\"lat\", 50.833328], [\"long\", 4]], [[\"city\", \"Бенин\"], [\"lat\", 43960], [\"long\", 45689]], [[\"city\", \"Болгария\"], [\"lat\", 43], [\"long\", 25]], [[\"city\", \"Боливия\"], [\"lat\", -17], [\"long\", -65]], [[\"city\", \"Босния и Герцеговина\"], [\"lat\", 44.25], [\"long\", 17.83333]], [[\"city\", \"Ботсвана\"], [\"lat\", -22], [\"long\", 24]], [[\"city\", \"Бразилия\"], [\"lat\", 39.523651], [\"long\", -87.125023]], [[\"city\", \"Бруней\"], [\"lat\", 43955], [\"long\", 114.666672]], [[\"city\", \"Буркина-Фасо\"], [\"lat\", 13], [\"long\", -2]], [[\"city\", \"Бурунди\"], [\"lat\", -3.5], [\"long\", 30]], [[\"city\", \"Бутан\"], [\"lat\", 43978], [\"long\", 90.5]], [[\"city\", \"Вануату\"], [\"lat\", -16], [\"long\", 167]], [[\"city\", \"Ватикан\"], [\"lat\", 41.902359], [\"long\", 12.45332]], [[\"city\", \"Великобритания\"], [\"lat\", 54.758438], [\"long\", -2.69531]], [[\"city\", \"Венгрия\"], [\"lat\", 47], [\"long\", 20]], [[\"city\", \"Венесуэла\"], [\"lat\", 8], [\"long\", -66]], [[\"city\", \"Восточный Тимор\"], [\"lat\", -8.83333], [\"long\", 125.75]], [[\"city\", \"Вьетнам\"], [\"lat\", 16.16667], [\"long\", 107.833328]], [[\"city\", \"Габон\"], [\"lat\", -1], [\"long\", 27699]], [[\"city\", \"Гаити\"], [\"lat\", 19], [\"long\", -72.416672]], [[\"city\", \"Гайана\"], [\"lat\", 5], [\"long\", -59]], [[\"city\", \"Гамбия\"], [\"lat\", 43964], [\"long\", -15.5]], [[\"city\", \"Гана\"], [\"lat\", 8], [\"long\", -2]], [[\"city\", \"Гватемала\"], [\"lat\", 43966], [\"long\", -90.25]], [[\"city\", \"Гвинея\"], [\"lat\", 11], [\"long\", -10]], [[\"city\", \"Гвинея-Бисау\"], [\"lat\", 12], [\"long\", -15]], [[\"city\", \"Германия\"], [\"lat\", 51.5], [\"long\", 43961]], [[\"city\", \"Гондурас\"], [\"lat\", 15], [\"long\", -86.5]], [[\"city\", \"Гренада\"], [\"lat\", 12.11667], [\"long\", -61.666672]], [[\"city\", \"Греция\"], [\"lat\", 38.352428], [\"long\", 23.13995]], [[\"city\", \"Грузия\"], [\"lat\", 42], [\"long\", 43.5]], [[\"city\", \"Дания\"], [\"lat\", 56], [\"long\", 10]], [[\"city\", \"Демократическая Республика Конго\"], [\"lat\", 0], [\"long\", 25]], [[\"city\", \"Джибути\"], [\"lat\", 43962], [\"long\", 42.5]], [[\"city\", \"Доминика\"], [\"lat\", 43966], [\"long\", -61.333328]], [[\"city\", \"Доминиканская Республика\"], [\"lat\", 19], [\"long\", -70.666672]], [[\"city\", \"Египет\"], [\"lat\", 27], [\"long\", 30]], [[\"city\", \"Замбия\"], [\"lat\", -15], [\"long\", 30]], [[\"city\", \"Западная Сахара\"], [\"lat\", 27.162239], [\"long\", -13.20315]], [[\"city\", \"Зимбабве\"], [\"lat\", -19], [\"long\", 29]], [[\"city\", \"Израиль\"], [\"lat\", 43982], [\"long\", 34.75]], [[\"city\", \"Индия\"], [\"lat\", 20], [\"long\", 77]], [[\"city\", \"Индонезия\"], [\"lat\", -5], [\"long\", 120]], [[\"city\", \"Иордания\"], [\"lat\", 31], [\"long\", 36]], [[\"city\", \"Ирак\"], [\"lat\", 33], [\"long\", 44]], [[\"city\", \"Иран\"], [\"lat\", 32], [\"long\", 53]], [[\"city\", \"Ирландия\"], [\"lat\", 53], [\"long\", -8]], [[\"city\", \"Исландия\"], [\"lat\", 65], [\"long\", -18]], [[\"city\", \"Испания\"], [\"lat\", 40], [\"long\", -4]], [[\"city\", \"Италия\"], [\"lat\", 43.698292], [\"long\", 10.39955]], [[\"city\", \"Йемен\"], [\"lat\", 43966], [\"long\", 47.5]], [[\"city\", \"Кабо-Верде\"], [\"lat\", 16], [\"long\", -24]], [[\"city\", \"Казахстан\"], [\"lat\", 48], [\"long\", 68]], [[\"city\", \"Камбоджа\"], [\"lat\", 13], [\"long\", 105]], [[\"city\", \"Камерун\"], [\"lat\", 6], [\"long\", 12]], [[\"city\", \"Канада\"], [\"lat\", 60.108669], [\"long\", -113.642578]], [[\"city\", \"Катар\"], [\"lat\", 43976], [\"long\", 51.25]], [[\"city\", \"Кения\"], [\"lat\", 1], [\"long\", 38]], [[\"city\", \"Кипр\"], [\"lat\", 35], [\"long\", 33]], [[\"city\", \"Киргизия\"], [\"lat\", 41], [\"long\", 75]], [[\"city\", \"Кирибати\"], [\"lat\", 1.421], [\"long\", 172.983994]], [[\"city\", \"Китай\"], [\"lat\", 35], [\"long\", 105]], [[\"city\", \"Колумбия\"], [\"lat\", 4], [\"long\", -72]], [[\"city\", \"Коморские острова\"], [\"lat\", -12.23333], [\"long\", 44.44553]], [[\"city\", \"Конго\"], [\"lat\", -1], [\"long\", 15]], [[\"city\", \"Коста-Рика\"], [\"lat\", 10], [\"long\", -84]], [[\"city\", \"Кот-д'Ивуар\"], [\"lat\", 8], [\"long\", -5]], [[\"city\", \"Куба\"], [\"lat\", 22], [\"long\", -79.5]], [[\"city\", \"Кувейт\"], [\"lat\", 43980], [\"long\", 47.75]], [[\"city\", \"Лаос\"], [\"lat\", 20.34222], [\"long\", 104.344643]], [[\"city\", \"Латвия\"], [\"lat\", 57], [\"long\", 25]], [[\"city\", \"Лесото\"], [\"lat\", -29.5], [\"long\", 28.25]], [[\"city\", \"Либерия\"], [\"lat\", 43957], [\"long\", -9.5]], [[\"city\", \"Ливан\"], [\"lat\", 33.833328], [\"long\", 35.833328]], [[\"city\", \"Ливия\"], [\"lat\", 25], [\"long\", 17]], [[\"city\", \"Литва\"], [\"lat\", 56], [\"long\", 24]], [[\"city\", \"Лихтенштейн\"], [\"lat\", 47.166672], [\"long\", 9.53333]], [[\"city\", \"Люксембург\"], [\"lat\", 49.611671], [\"long\", 41426]], [[\"city\", \"Маврикий\"], [\"lat\", -20.299999], [\"long\", 57.583328]], [[\"city\", \"Мавритания\"], [\"lat\", 20], [\"long\", -12]], [[\"city\", \"Мадагаскар\"], [\"lat\", -20], [\"long\", 47]], [[\"city\", \"Малави\"], [\"lat\", -13.5], [\"long\", 34]], [[\"city\", \"Малайзия\"], [\"lat\", 43953], [\"long\", 112.5]], [[\"city\", \"Мали\"], [\"lat\", 17], [\"long\", -4]], [[\"city\", \"Мальдивы\"], [\"lat\", 43864], [\"long\", 73]], [[\"city\", \"Мальта\"], [\"lat\", 35.916672], [\"long\", 14.43333]], [[\"city\", \"Марокко\"], [\"lat\", 32], [\"long\", -5]], [[\"city\", \"Маршалловы острова\"], [\"lat\", 7.113], [\"long\", 171.235992]], [[\"city\", \"Мексика\"], [\"lat\", 23], [\"long\", -102]], [[\"city\", \"Микронезия\"], [\"lat\", 6.924], [\"long\", 158.162003]], [[\"city\", \"Мозамбик\"], [\"lat\", -18.25], [\"long\", 35]], [[\"city\", \"Молдавия\"], [\"lat\", 47], [\"long\", 29]], [[\"city\", \"Монако\"], [\"lat\", 43.73333], [\"long\", 7.41667]], [[\"city\", \"Монголия\"], [\"lat\", 46], [\"long\", 105]], [[\"city\", \"Мьянма\"], [\"lat\", 22], [\"long\", 98]], [[\"city\", \"Намибия\"], [\"lat\", -22], [\"long\", 17]], [[\"city\", \"Науру\"], [\"lat\", -0.517], [\"long\", 166.932999]], [[\"city\", \"Непал\"], [\"lat\", 28], [\"long\", 84]], [[\"city\", \"Нигер\"], [\"lat\", 16], [\"long\", 8]], [[\"city\", \"Нигерия\"], [\"lat\", 10], [\"long\", 8]], [[\"city\", \"Нидерланды\"], [\"lat\", 52.5], [\"long\", 27515]], [[\"city\", \"Никарагуа\"], [\"lat\", 13], [\"long\", -85]], [[\"city\", \"Новая Зеландия\"], [\"lat\", -42], [\"long\", 174]], [[\"city\", \"Норвегия\"], [\"lat\", 62], [\"long\", 10]], [[\"city\", \"ОАЭ\"], [\"lat\", 24], [\"long\", 54]], [[\"city\", \"Оман\"], [\"lat\", 21], [\"long\", 57]], [[\"city\", \"Пакистан\"], [\"lat\", 30], [\"long\", 70]], [[\"city\", \"Палау\"], [\"lat\", 7.503], [\"long\", 134.621002]], [[\"city\", \"Палестина\"], [\"lat\", 31.92157], [\"long\", 35.203289]], [[\"city\", \"Панама\"], [\"lat\", 2935303], [\"long\", -79.51973]], [[\"city\", \"Папуа - Новая Гвинея\"], [\"lat\", -6], [\"long\", 147]], [[\"city\", \"Парагвай\"], [\"lat\", -22.99333], [\"long\", -57.996391]], [[\"city\", \"Перу\"], [\"lat\", -10], [\"long\", -76]], [[\"city\", \"Польша\"], [\"lat\", 52], [\"long\", 20]], [[\"city\", \"Португалия\"], [\"lat\", 38.726349], [\"long\", -9.14843]], [[\"city\", \"Россия\"], [\"lat\", 60], [\"long\", 100]], [[\"city\", \"Руанда\"], [\"lat\", -2], [\"long\", 30]], [[\"city\", \"Румыния\"], [\"lat\", 46], [\"long\", 25]], [[\"city\", \"Сальвадор\"], [\"lat\", 13.83333], [\"long\", -88.916672]], [[\"city\", \"Самоа\"], [\"lat\", -13.8031], [\"long\", -172.178314]], [[\"city\", \"Сан-Марино\"], [\"lat\", 43.933331], [\"long\", 16772]], [[\"city\", \"Сан-Томе и Принсипи\"], [\"lat\", 1], [\"long\", 7]], [[\"city\", \"Саудовская Аравия\"], [\"lat\", 25], [\"long\", 45]], [[\"city\", \"Северная Корея\"], [\"lat\", 40], [\"long\", 127]], [[\"city\", \"Северная Македония\"], [\"lat\", 41.833328], [\"long\", 22]], [[\"city\", \"Сейшельские острова\"], [\"lat\", -4.58333], [\"long\", 55.666672]], [[\"city\", \"Сенегал\"], [\"lat\", 14], [\"long\", -14]], [[\"city\", \"Сент-Винсент и Гренадины\"], [\"lat\", 13.08333], [\"long\", -61.200001]], [[\"city\", \"Сент-Китс и Невис\"], [\"lat\", 17.33333], [\"long\", -62.75]], [[\"city\", \"Сент-Люсия\"], [\"lat\", 13.88333], [\"long\", -60.966671]], [[\"city\", \"Сербия\"], [\"lat\", 44.81892], [\"long\", 20.45998]], [[\"city\", \"Сингапур\"], [\"lat\", 1.36667], [\"long\", 103.800003]], [[\"city\", \"Сирия\"], [\"lat\", 35], [\"long\", 38]], [[\"city\", \"Словакия\"], [\"lat\", 48.666668], [\"long\", 43970]], [[\"city\", \"Словения\"], [\"lat\", 46.25], [\"long\", 15.16667]], [[\"city\", \"Соломоновы острова\"], [\"lat\", -8], [\"long\", 159]], [[\"city\", \"Сомали\"], [\"lat\", 6], [\"long\", 48]], [[\"city\", \"Судан\"], [\"lat\", 16], [\"long\", 30]], [[\"city\", \"Суринам\"], [\"lat\", 4], [\"long\", -56]], [[\"city\", \"США\"], [\"lat\", 39.759998], [\"long\", -98.5]], [[\"city\", \"Сьерра-Леоне\"], [\"lat\", 43959], [\"long\", -11.5]], [[\"city\", \"Таджикистан\"], [\"lat\", 39], [\"long\", 71]], [[\"city\", \"Таиланд\"], [\"lat\", 15], [\"long\", 100]], [[\"city\", \"Тайвань\"], [\"lat\", 24], [\"long\", 121]], [[\"city\", \"Танзания\"], [\"lat\", -6], [\"long\", 35]], [[\"city\", \"Того\"], [\"lat\", 8], [\"long\", 1.16667]], [[\"city\", \"Тонга\"], [\"lat\", -20], [\"long\", -175]], [[\"city\", \"Тринидад и Тобаго\"], [\"lat\", 11], [\"long\", -61]], [[\"city\", \"Тувалу\"], [\"lat\", -8.51719], [\"long\", 179.144775]], [[\"city\", \"Тунис\"], [\"lat\", 34], [\"long\", 9]], [[\"city\", \"Туркмения\"], [\"lat\", 40], [\"long\", 60]], [[\"city\", \"Турция\"], [\"lat\", 39.05901], [\"long\", 34.911549]], [[\"city\", \"Уганда\"], [\"lat\", 2], [\"long\", 33]], [[\"city\", \"Узбекистан\"], [\"lat\", 41.707539], [\"long\", 63.84911]], [[\"city\", \"Украина\"], [\"lat\", 49], [\"long\", 32]], [[\"city\", \"Уругвай\"], [\"lat\", -33], [\"long\", -56]], [[\"city\", \"Фиджи\"], [\"lat\", -18], [\"long\", 178]], [[\"city\", \"Филиппины\"], [\"lat\", 13], [\"long\", 122]], [[\"city\", \"Финляндия\"], [\"lat\", 64], [\"long\", 26]], [[\"city\", \"Франция\"], [\"lat\", 46], [\"long\", 2]], [[\"city\", \"Хорватия\"], [\"lat\", 45.166672], [\"long\", 43966]], [[\"city\", \"ЦАР\"], [\"lat\", 7], [\"long\", 21]], [[\"city\", \"Чад\"], [\"lat\", 15], [\"long\", 19]], [[\"city\", \"Черногория\"], [\"lat\", 42.5], [\"long\", 19.299999]], [[\"city\", \"Чехия\"], [\"lat\", 49.75], [\"long\", 15]], [[\"city\", \"Чили\"], [\"lat\", -30], [\"long\", -71]], [[\"city\", \"Швейцария\"], [\"lat\", 47.000156], [\"long\", 8.014269]], [[\"city\", \"Швеция\"], [\"lat\", 62], [\"long\", 15]], [[\"city\", \"Шри-Ланка\"], [\"lat\", 7], [\"long\", 81]], [[\"city\", \"Эквадор\"], [\"lat\", -2], [\"long\", -77.5]], [[\"city\", \"Экваториальная Гвинея\"], [\"lat\", 2], [\"long\", 10]], [[\"city\", \"Эритрея\"], [\"lat\", 15], [\"long\", 39]], [[\"city\", \"Эсватини (Свазиленд)\"], [\"lat\", -26.5], [\"long\", 43982]], [[\"city\", \"Эстония\"], [\"lat\", 59], [\"long\", 26]], [[\"city\", \"Эфиопия\"], [\"lat\", 8], [\"long\", 38]], [[\"city\", \"ЮАР\"], [\"lat\", -30], [\"long\", 26]], [[\"city\", \"Южная Корея\"], [\"lat\", 37], [\"long\", 127.5]], [[\"city\", \"Южный Судан\"], [\"lat\", 4.84023], [\"long\", 31.59428]], [[\"city\", \"Ямайка\"], [\"lat\", 18.25], [\"long\", -77.5]], [[\"city\", \"Япония\"], [\"lat\", 35.68536], [\"long\", 139.753098]]];\n\nconst arrCountryLeft = [[[\"city\", \"Австралия\"], [\"lat\", -35.5], [\"long\", 149]], [[\"city\", \"Австрия\"], [\"lat\", 47.333328], [\"long\", 13.33333]], [[\"city\", \"Азербайджан\"], [\"lat\", 40.5], [\"long\", 47.5]], [[\"city\", \"Албания\"], [\"lat\", 42.304482], [\"long\", 2.72135]], [[\"city\", \"Алжир\"], [\"lat\", 28], [\"long\", 3]], [[\"city\", \"Ангола\"], [\"lat\", -12.5], [\"long\", 43969]], [[\"city\", \"Андорра\"], [\"lat\", 42.5], [\"long\", 43952]], [[\"city\", \"Антигуа\"], [\"lat\", 17.049999], [\"long\", -61.799999]], [[\"city\", \"Аргентина\"], [\"lat\", -31.383329], [\"long\", -64.066673]], [[\"city\", \"Армения\"], [\"lat\", 40], [\"long\", 45]], [[\"city\", \"Афганистан\"], [\"lat\", 33], [\"long\", 66]], [[\"city\", \"Багамские острова\"], [\"lat\", 25.040819], [\"long\", -77.371223]], [[\"city\", \"Бангладеш\"], [\"lat\", 24], [\"long\", 90]], [[\"city\", \"Барбадос\"], [\"lat\", 13.16667], [\"long\", -59.533329]], [[\"city\", \"Бахрейн\"], [\"lat\", 26], [\"long\", 50.5]], [[\"city\", \"Белиз\"], [\"lat\", 17.25], [\"long\", -88.75]], [[\"city\", \"Белоруссия\"], [\"lat\", 53], [\"long\", 28]], [[\"city\", \"Бельгия\"], [\"lat\", 50.833328], [\"long\", 4]], [[\"city\", \"Бенин\"], [\"lat\", 43960], [\"long\", 45689]], [[\"city\", \"Болгария\"], [\"lat\", 43], [\"long\", 25]], [[\"city\", \"Боливия\"], [\"lat\", -17], [\"long\", -65]], [[\"city\", \"Босния и Герцеговина\"], [\"lat\", 44.25], [\"long\", 17.83333]], [[\"city\", \"Ботсвана\"], [\"lat\", -22], [\"long\", 24]], [[\"city\", \"Бразилия\"], [\"lat\", 39.523651], [\"long\", -87.125023]], [[\"city\", \"Бруней\"], [\"lat\", 43955], [\"long\", 114.666672]], [[\"city\", \"Буркина-Фасо\"], [\"lat\", 13], [\"long\", -2]], [[\"city\", \"Бурунди\"], [\"lat\", -3.5], [\"long\", 30]], [[\"city\", \"Бутан\"], [\"lat\", 43978], [\"long\", 90.5]], [[\"city\", \"Вануату\"], [\"lat\", -16], [\"long\", 167]], [[\"city\", \"Ватикан\"], [\"lat\", 41.902359], [\"long\", 12.45332]], [[\"city\", \"Великобритания\"], [\"lat\", 54.758438], [\"long\", -2.69531]], [[\"city\", \"Венгрия\"], [\"lat\", 47], [\"long\", 20]], [[\"city\", \"Венесуэла\"], [\"lat\", 8], [\"long\", -66]], [[\"city\", \"Восточный Тимор\"], [\"lat\", -8.83333], [\"long\", 125.75]], [[\"city\", \"Вьетнам\"], [\"lat\", 16.16667], [\"long\", 107.833328]], [[\"city\", \"Габон\"], [\"lat\", -1], [\"long\", 27699]], [[\"city\", \"Гаити\"], [\"lat\", 19], [\"long\", -72.416672]], [[\"city\", \"Гайана\"], [\"lat\", 5], [\"long\", -59]], [[\"city\", \"Гамбия\"], [\"lat\", 43964], [\"long\", -15.5]], [[\"city\", \"Гана\"], [\"lat\", 8], [\"long\", -2]], [[\"city\", \"Гватемала\"], [\"lat\", 43966], [\"long\", -90.25]], [[\"city\", \"Гвинея\"], [\"lat\", 11], [\"long\", -10]], [[\"city\", \"Гвинея-Бисау\"], [\"lat\", 12], [\"long\", -15]], [[\"city\", \"Германия\"], [\"lat\", 51.5], [\"long\", 43961]], [[\"city\", \"Гондурас\"], [\"lat\", 15], [\"long\", -86.5]], [[\"city\", \"Гренада\"], [\"lat\", 12.11667], [\"long\", -61.666672]], [[\"city\", \"Греция\"], [\"lat\", 38.352428], [\"long\", 23.13995]], [[\"city\", \"Грузия\"], [\"lat\", 42], [\"long\", 43.5]], [[\"city\", \"Дания\"], [\"lat\", 56], [\"long\", 10]], [[\"city\", \"Демократическая Республика Конго\"], [\"lat\", 0], [\"long\", 25]], [[\"city\", \"Джибути\"], [\"lat\", 43962], [\"long\", 42.5]], [[\"city\", \"Доминика\"], [\"lat\", 43966], [\"long\", -61.333328]], [[\"city\", \"Доминиканская Республика\"], [\"lat\", 19], [\"long\", -70.666672]], [[\"city\", \"Египет\"], [\"lat\", 27], [\"long\", 30]], [[\"city\", \"Замбия\"], [\"lat\", -15], [\"long\", 30]], [[\"city\", \"Западная Сахара\"], [\"lat\", 27.162239], [\"long\", -13.20315]], [[\"city\", \"Зимбабве\"], [\"lat\", -19], [\"long\", 29]], [[\"city\", \"Израиль\"], [\"lat\", 43982], [\"long\", 34.75]], [[\"city\", \"Индия\"], [\"lat\", 20], [\"long\", 77]], [[\"city\", \"Индонезия\"], [\"lat\", -5], [\"long\", 120]], [[\"city\", \"Иордания\"], [\"lat\", 31], [\"long\", 36]], [[\"city\", \"Ирак\"], [\"lat\", 33], [\"long\", 44]], [[\"city\", \"Иран\"], [\"lat\", 32], [\"long\", 53]], [[\"city\", \"Ирландия\"], [\"lat\", 53], [\"long\", -8]], [[\"city\", \"Исландия\"], [\"lat\", 65], [\"long\", -18]], [[\"city\", \"Испания\"], [\"lat\", 40], [\"long\", -4]], [[\"city\", \"Италия\"], [\"lat\", 43.698292], [\"long\", 10.39955]], [[\"city\", \"Йемен\"], [\"lat\", 43966], [\"long\", 47.5]], [[\"city\", \"Кабо-Верде\"], [\"lat\", 16], [\"long\", -24]], [[\"city\", \"Казахстан\"], [\"lat\", 48], [\"long\", 68]], [[\"city\", \"Камбоджа\"], [\"lat\", 13], [\"long\", 105]], [[\"city\", \"Камерун\"], [\"lat\", 6], [\"long\", 12]], [[\"city\", \"Канада\"], [\"lat\", 60.108669], [\"long\", -113.642578]], [[\"city\", \"Катар\"], [\"lat\", 43976], [\"long\", 51.25]], [[\"city\", \"Кения\"], [\"lat\", 1], [\"long\", 38]], [[\"city\", \"Кипр\"], [\"lat\", 35], [\"long\", 33]], [[\"city\", \"Киргизия\"], [\"lat\", 41], [\"long\", 75]], [[\"city\", \"Кирибати\"], [\"lat\", 1.421], [\"long\", 172.983994]], [[\"city\", \"Китай\"], [\"lat\", 35], [\"long\", 105]], [[\"city\", \"Колумбия\"], [\"lat\", 4], [\"long\", -72]], [[\"city\", \"Коморские острова\"], [\"lat\", -12.23333], [\"long\", 44.44553]], [[\"city\", \"Конго\"], [\"lat\", -1], [\"long\", 15]], [[\"city\", \"Коста-Рика\"], [\"lat\", 10], [\"long\", -84]], [[\"city\", \"Кот-д'Ивуар\"], [\"lat\", 8], [\"long\", -5]], [[\"city\", \"Куба\"], [\"lat\", 22], [\"long\", -79.5]], [[\"city\", \"Кувейт\"], [\"lat\", 43980], [\"long\", 47.75]], [[\"city\", \"Лаос\"], [\"lat\", 20.34222], [\"long\", 104.344643]], [[\"city\", \"Латвия\"], [\"lat\", 57], [\"long\", 25]], [[\"city\", \"Лесото\"], [\"lat\", -29.5], [\"long\", 28.25]], [[\"city\", \"Либерия\"], [\"lat\", 43957], [\"long\", -9.5]], [[\"city\", \"Ливан\"], [\"lat\", 33.833328], [\"long\", 35.833328]], [[\"city\", \"Ливия\"], [\"lat\", 25], [\"long\", 17]], [[\"city\", \"Литва\"], [\"lat\", 56], [\"long\", 24]], [[\"city\", \"Лихтенштейн\"], [\"lat\", 47.166672], [\"long\", 9.53333]], [[\"city\", \"Люксембург\"], [\"lat\", 49.611671], [\"long\", 41426]], [[\"city\", \"Маврикий\"], [\"lat\", -20.299999], [\"long\", 57.583328]], [[\"city\", \"Мавритания\"], [\"lat\", 20], [\"long\", -12]], [[\"city\", \"Мадагаскар\"], [\"lat\", -20], [\"long\", 47]], [[\"city\", \"Малави\"], [\"lat\", -13.5], [\"long\", 34]], [[\"city\", \"Малайзия\"], [\"lat\", 43953], [\"long\", 112.5]], [[\"city\", \"Мали\"], [\"lat\", 17], [\"long\", -4]], [[\"city\", \"Мальдивы\"], [\"lat\", 43864], [\"long\", 73]], [[\"city\", \"Мальта\"], [\"lat\", 35.916672], [\"long\", 14.43333]], [[\"city\", \"Марокко\"], [\"lat\", 32], [\"long\", -5]], [[\"city\", \"Маршалловы острова\"], [\"lat\", 7.113], [\"long\", 171.235992]], [[\"city\", \"Мексика\"], [\"lat\", 23], [\"long\", -102]], [[\"city\", \"Микронезия\"], [\"lat\", 6.924], [\"long\", 158.162003]], [[\"city\", \"Мозамбик\"], [\"lat\", -18.25], [\"long\", 35]], [[\"city\", \"Молдавия\"], [\"lat\", 47], [\"long\", 29]], [[\"city\", \"Монако\"], [\"lat\", 43.73333], [\"long\", 7.41667]], [[\"city\", \"Монголия\"], [\"lat\", 46], [\"long\", 105]], [[\"city\", \"Мьянма\"], [\"lat\", 22], [\"long\", 98]], [[\"city\", \"Намибия\"], [\"lat\", -22], [\"long\", 17]], [[\"city\", \"Науру\"], [\"lat\", -0.517], [\"long\", 166.932999]], [[\"city\", \"Непал\"], [\"lat\", 28], [\"long\", 84]], [[\"city\", \"Нигер\"], [\"lat\", 16], [\"long\", 8]], [[\"city\", \"Нигерия\"], [\"lat\", 10], [\"long\", 8]], [[\"city\", \"Нидерланды\"], [\"lat\", 52.5], [\"long\", 27515]], [[\"city\", \"Никарагуа\"], [\"lat\", 13], [\"long\", -85]], [[\"city\", \"Новая Зеландия\"], [\"lat\", -42], [\"long\", 174]], [[\"city\", \"Норвегия\"], [\"lat\", 62], [\"long\", 10]], [[\"city\", \"ОАЭ\"], [\"lat\", 24], [\"long\", 54]], [[\"city\", \"Оман\"], [\"lat\", 21], [\"long\", 57]], [[\"city\", \"Пакистан\"], [\"lat\", 30], [\"long\", 70]], [[\"city\", \"Палау\"], [\"lat\", 7.503], [\"long\", 134.621002]], [[\"city\", \"Палестина\"], [\"lat\", 31.92157], [\"long\", 35.203289]], [[\"city\", \"Панама\"], [\"lat\", 2935303], [\"long\", -79.51973]], [[\"city\", \"Папуа - Новая Гвинея\"], [\"lat\", -6], [\"long\", 147]], [[\"city\", \"Парагвай\"], [\"lat\", -22.99333], [\"long\", -57.996391]], [[\"city\", \"Перу\"], [\"lat\", -10], [\"long\", -76]], [[\"city\", \"Польша\"], [\"lat\", 52], [\"long\", 20]], [[\"city\", \"Португалия\"], [\"lat\", 38.726349], [\"long\", -9.14843]], [[\"city\", \"Россия\"], [\"lat\", 60], [\"long\", 100]], [[\"city\", \"Руанда\"], [\"lat\", -2], [\"long\", 30]], [[\"city\", \"Румыния\"], [\"lat\", 46], [\"long\", 25]], [[\"city\", \"Сальвадор\"], [\"lat\", 13.83333], [\"long\", -88.916672]], [[\"city\", \"Самоа\"], [\"lat\", -13.8031], [\"long\", -172.178314]], [[\"city\", \"Сан-Марино\"], [\"lat\", 43.933331], [\"long\", 16772]], [[\"city\", \"Сан-Томе и Принсипи\"], [\"lat\", 1], [\"long\", 7]], [[\"city\", \"Саудовская Аравия\"], [\"lat\", 25], [\"long\", 45]], [[\"city\", \"Северная Корея\"], [\"lat\", 40], [\"long\", 127]], [[\"city\", \"Северная Македония\"], [\"lat\", 41.833328], [\"long\", 22]], [[\"city\", \"Сейшельские острова\"], [\"lat\", -4.58333], [\"long\", 55.666672]], [[\"city\", \"Сенегал\"], [\"lat\", 14], [\"long\", -14]], [[\"city\", \"Сент-Винсент и Гренадины\"], [\"lat\", 13.08333], [\"long\", -61.200001]], [[\"city\", \"Сент-Китс и Невис\"], [\"lat\", 17.33333], [\"long\", -62.75]], [[\"city\", \"Сент-Люсия\"], [\"lat\", 13.88333], [\"long\", -60.966671]], [[\"city\", \"Сербия\"], [\"lat\", 44.81892], [\"long\", 20.45998]], [[\"city\", \"Сингапур\"], [\"lat\", 1.36667], [\"long\", 103.800003]], [[\"city\", \"Сирия\"], [\"lat\", 35], [\"long\", 38]], [[\"city\", \"Словакия\"], [\"lat\", 48.666668], [\"long\", 43970]], [[\"city\", \"Словения\"], [\"lat\", 46.25], [\"long\", 15.16667]], [[\"city\", \"Соломоновы острова\"], [\"lat\", -8], [\"long\", 159]], [[\"city\", \"Сомали\"], [\"lat\", 6], [\"long\", 48]], [[\"city\", \"Судан\"], [\"lat\", 16], [\"long\", 30]], [[\"city\", \"Суринам\"], [\"lat\", 4], [\"long\", -56]], [[\"city\", \"США\"], [\"lat\", 39.759998], [\"long\", -98.5]], [[\"city\", \"Сьерра-Леоне\"], [\"lat\", 43959], [\"long\", -11.5]], [[\"city\", \"Таджикистан\"], [\"lat\", 39], [\"long\", 71]], [[\"city\", \"Таиланд\"], [\"lat\", 15], [\"long\", 100]], [[\"city\", \"Тайвань\"], [\"lat\", 24], [\"long\", 121]], [[\"city\", \"Танзания\"], [\"lat\", -6], [\"long\", 35]], [[\"city\", \"Того\"], [\"lat\", 8], [\"long\", 1.16667]], [[\"city\", \"Тонга\"], [\"lat\", -20], [\"long\", -175]], [[\"city\", \"Тринидад и Тобаго\"], [\"lat\", 11], [\"long\", -61]], [[\"city\", \"Тувалу\"], [\"lat\", -8.51719], [\"long\", 179.144775]], [[\"city\", \"Тунис\"], [\"lat\", 34], [\"long\", 9]], [[\"city\", \"Туркмения\"], [\"lat\", 40], [\"long\", 60]], [[\"city\", \"Турция\"], [\"lat\", 39.05901], [\"long\", 34.911549]], [[\"city\", \"Уганда\"], [\"lat\", 2], [\"long\", 33]], [[\"city\", \"Узбекистан\"], [\"lat\", 41.707539], [\"long\", 63.84911]], [[\"city\", \"Украина\"], [\"lat\", 49], [\"long\", 32]], [[\"city\", \"Уругвай\"], [\"lat\", -33], [\"long\", -56]], [[\"city\", \"Фиджи\"], [\"lat\", -18], [\"long\", 178]], [[\"city\", \"Филиппины\"], [\"lat\", 13], [\"long\", 122]], [[\"city\", \"Финляндия\"], [\"lat\", 64], [\"long\", 26]], [[\"city\", \"Франция\"], [\"lat\", 46], [\"long\", 2]], [[\"city\", \"Хорватия\"], [\"lat\", 45.166672], [\"long\", 43966]], [[\"city\", \"ЦАР\"], [\"lat\", 7], [\"long\", 21]], [[\"city\", \"Чад\"], [\"lat\", 15], [\"long\", 19]], [[\"city\", \"Черногория\"], [\"lat\", 42.5], [\"long\", 19.299999]], [[\"city\", \"Чехия\"], [\"lat\", 49.75], [\"long\", 15]], [[\"city\", \"Чили\"], [\"lat\", -30], [\"long\", -71]], [[\"city\", \"Швейцария\"], [\"lat\", 47.000156], [\"long\", 8.014269]], [[\"city\", \"Швеция\"], [\"lat\", 62], [\"long\", 15]], [[\"city\", \"Шри-Ланка\"], [\"lat\", 7], [\"long\", 81]], [[\"city\", \"Эквадор\"], [\"lat\", -2], [\"long\", -77.5]], [[\"city\", \"Экваториальная Гвинея\"], [\"lat\", 2], [\"long\", 10]], [[\"city\", \"Эритрея\"], [\"lat\", 15], [\"long\", 39]], [[\"city\", \"Эсватини (Свазиленд)\"], [\"lat\", -26.5], [\"long\", 43982]], [[\"city\", \"Эстония\"], [\"lat\", 59], [\"long\", 26]], [[\"city\", \"Эфиопия\"], [\"lat\", 8], [\"long\", 38]], [[\"city\", \"ЮАР\"], [\"lat\", -30], [\"long\", 26]], [[\"city\", \"Южная Корея\"], [\"lat\", 37], [\"long\", 127.5]], [[\"city\", \"Южный Судан\"], [\"lat\", 4.84023], [\"long\", 31.59428]], [[\"city\", \"Ямайка\"], [\"lat\", 18.25], [\"long\", -77.5]], [[\"city\", \"Япония\"], [\"lat\", 35.68536], [\"long\", 139.753098]]];\nconst arrCityLeft = [[[\"city\", \"Москва\"], [\"lat\", 55.45], [\"long\", 37.37]], [[\"city\", \"Санкт-Петербург\"], [\"lat\", 59.56], [\"long\", 30.19]], [[\"city\", \"Новосибирск\"], [\"lat\", 55.1], [\"long\", 82.56]], [[\"city\", \"Екатеринбург\"], [\"lat\", 56.51], [\"long\", 60.36]], [[\"city\", \"Самара\"], [\"lat\", 53.14], [\"long\", 50.1]], [[\"city\", \"Омск\"], [\"lat\", 54.59], [\"long\", 73.22]], [[\"city\", \"Казань\"], [\"lat\", 55.47], [\"long\", 49.1]], [[\"city\", \"Уфа\"], [\"lat\", 54.49], [\"long\", 56.4]], [[\"city\", \"Челябинск\"], [\"lat\", 55.9], [\"long\", 61.26]], [[\"city\", \"Ростов-на-Дону\"], [\"lat\", 47.14], [\"long\", 39.42]], [[\"city\", \"Пермь\"], [\"lat\", 58], [\"long\", 56.14]], [[\"city\", \"Волгоград\"], [\"lat\", 48.43], [\"long\", 44.29]], [[\"city\", \"Воронеж\"], [\"lat\", 51.43], [\"long\", 39.16]], [[\"city\", \"Красноярск\"], [\"lat\", 56.1], [\"long\", 93.4]], [[\"city\", \"Саратов\"], [\"lat\", 51.33], [\"long\", 46]], [[\"city\", \"Тольятти\"], [\"lat\", 53.29], [\"long\", 49.31]], [[\"city\", \"Ульяновск\"], [\"lat\", 54.19], [\"long\", 48.22]], [[\"city\", \"Ижевск\"], [\"lat\", 56.5], [\"long\", 53.11]], [[\"city\", \"Краснодар\"], [\"lat\", 45.2], [\"long\", 38.58]], [[\"city\", \"Ярославль\"], [\"lat\", 57.37], [\"long\", 39.51]], [[\"city\", \"Хабаровск\"], [\"lat\", 48.25], [\"long\", 135.7]], [[\"city\", \"Владивосток\"], [\"lat\", 43.8], [\"long\", 131.54]], [[\"city\", \"Иркутск\"], [\"lat\", 52.2], [\"long\", 104.14]], [[\"city\", \"Барнаул\"], [\"lat\", 53.21], [\"long\", 83.45]], [[\"city\", \"Новокузнецк\"], [\"lat\", 53.45], [\"long\", 87.7]], [[\"city\", \"Липецк\"], [\"lat\", 52.37], [\"long\", 39.37]], [[\"city\", \"Пенза\"], [\"lat\", 53.12], [\"long\", 45]], [[\"city\", \"Рязань\"], [\"lat\", 54.36], [\"long\", 39.42]], [[\"city\", \"Оренбург\"], [\"lat\", 51.47], [\"long\", 55.6]], [[\"city\", \"Набережные Челны\"], [\"lat\", 55.41], [\"long\", 52.19]], [[\"city\", \"Тюмень\"], [\"lat\", 57.1], [\"long\", 65.3]], [[\"city\", \"Тула\"], [\"lat\", 54.13], [\"long\", 37.36]], [[\"city\", \"Кемерово\"], [\"lat\", 55.25], [\"long\", 86.5]], [[\"city\", \"Астрахань\"], [\"lat\", 46.22], [\"long\", 48.5]], [[\"city\", \"Томск\"], [\"lat\", 56.29], [\"long\", 84.59]], [[\"city\", \"Киров\"], [\"lat\", 58.36], [\"long\", 49.39]], [[\"city\", \"Чебоксары\"], [\"lat\", 56.8], [\"long\", 47.14]], [[\"city\", \"Брянск\"], [\"lat\", 53.16], [\"long\", 34.25]], [[\"city\", \"Иваново\"], [\"lat\", 57.1], [\"long\", 40.59]], [[\"city\", \"Тверь\"], [\"lat\", 56.52], [\"long\", 35.55]], [[\"city\", \"Курск\"], [\"lat\", 51.44], [\"long\", 36.11]], [[\"city\", \"Магнитогорск\"], [\"lat\", 53.25], [\"long\", 58.58]], [[\"city\", \"Калининград\"], [\"lat\", 54.43], [\"long\", 20.31]], [[\"city\", \"Нижний Тагил\"], [\"lat\", 57.56], [\"long\", 60.1]], [[\"city\", \"Улан-Удэ\"], [\"lat\", 51.5], [\"long\", 107.36]], [[\"city\", \"Сочи\"], [\"lat\", 43.35], [\"long\", 39.44]], [[\"city\", \"Курган\"], [\"lat\", 55.26], [\"long\", 65.19]], [[\"city\", \"Мурманск\"], [\"lat\", 68.58], [\"long\", 33.5]], [[\"city\", \"Архангельск\"], [\"lat\", 64.32], [\"long\", 40.32]], [[\"city\", \"Смоленск\"], [\"lat\", 54.47], [\"long\", 32.3]], [[\"city\", \"Белгород\"], [\"lat\", 50.37], [\"long\", 36.35]], [[\"city\", \"Ставрополь\"], [\"lat\", 45.3], [\"long\", 41.58]], [[\"city\", \"Орел\"], [\"lat\", 52.58], [\"long\", 36.4]], [[\"city\", \"Калуга\"], [\"lat\", 54.32], [\"long\", 36.17]], [[\"city\", \"Владимир\"], [\"lat\", 56.9], [\"long\", 40.25]], [[\"city\", \"Махачкала\"], [\"lat\", 42.59], [\"long\", 47.31]], [[\"city\", \"Череповец\"], [\"lat\", 59.8], [\"long\", 37.55]], [[\"city\", \"Владикавказ\"], [\"lat\", 43.2], [\"long\", 44.4]], [[\"city\", \"Саранск\"], [\"lat\", 54.11], [\"long\", 45.1]], [[\"city\", \"Тамбов\"], [\"lat\", 52.43], [\"long\", 41.25]], [[\"city\", \"Чита\"], [\"lat\", 52.3], [\"long\", 113.28]], [[\"city\", \"Вологда\"], [\"lat\", 59.14], [\"long\", 39.54]], [[\"city\", \"Кострома\"], [\"lat\", 57.46], [\"long\", 40.56]], [[\"city\", \"Комсомольск-на-Амуре\"], [\"lat\", 50.34], [\"long\", 137]], [[\"city\", \"Волжский\"], [\"lat\", 48.49], [\"long\", 44.44]], [[\"city\", \"Таганрог\"], [\"lat\", 47.14], [\"long\", 38.54]], [[\"city\", \"Петрозаводск\"], [\"lat\", 61.47], [\"long\", 34.2]], [[\"city\", \"Братск\"], [\"lat\", 56.18], [\"long\", 101.43]], [[\"city\", \"Сургут\"], [\"lat\", 61.15], [\"long\", 73.23]], [[\"city\", \"Дзержинск\"], [\"lat\", 56.16], [\"long\", 43.24]], [[\"city\", \"Орск\"], [\"lat\", 51.13], [\"long\", 58.38]], [[\"city\", \"Стерлитамак\"], [\"lat\", 53.38], [\"long\", 55.57]], [[\"city\", \"Ангарск\"], [\"lat\", 52.34], [\"long\", 103.55]], [[\"city\", \"Йошкар-Ола\"], [\"lat\", 56.38], [\"long\", 47.52]], [[\"city\", \"Рыбинск\"], [\"lat\", 58.3], [\"long\", 38.5]], [[\"city\", \"Прокопьевск\"], [\"lat\", 53.54], [\"long\", 86.43]], [[\"city\", \"Нижневартовск\"], [\"lat\", 60.56], [\"long\", 76.32]], [[\"city\", \"Великий Новгород\"], [\"lat\", 58.32], [\"long\", 31.16]], [[\"city\", \"Сыктывкар\"], [\"lat\", 61.4], [\"long\", 50.49]], [[\"city\", \"Нижнекамск\"], [\"lat\", 55.38], [\"long\", 51.47]], [[\"city\", \"Бийск\"], [\"lat\", 52.32], [\"long\", 85.1]], [[\"city\", \"Благовещенск\"], [\"lat\", 50.17], [\"long\", 127.32]], [[\"city\", \"Северодвинск\"], [\"lat\", 64.34], [\"long\", 39.49]], [[\"city\", \"Шахты\"], [\"lat\", 47.41], [\"long\", 40.15]], [[\"city\", \"Старый Оскол\"], [\"lat\", 51.18], [\"long\", 37.5]], [[\"city\", \"Зеленоград\"], [\"lat\", 55.56], [\"long\", 37.17]], [[\"city\", \"Новороссийск\"], [\"lat\", 44.43], [\"long\", 37.46]], [[\"city\", \"Балаково\"], [\"lat\", 52], [\"long\", 47.47]], [[\"city\", \"Псков\"], [\"lat\", 57.49], [\"long\", 28.2]], [[\"city\", \"Златоуст\"], [\"lat\", 55.11], [\"long\", 59.38]], [[\"city\", \"Якутск\"], [\"lat\", 62.1], [\"long\", 129.5]], [[\"city\", \"Подольск\"], [\"lat\", 55.26], [\"long\", 37.34]], [[\"city\", \"Энгельс\"], [\"lat\", 51.29], [\"long\", 46.8]], [[\"city\", \"Сызрань\"], [\"lat\", 53.1], [\"long\", 48.27]], [[\"city\", \"Каменск-Уральский\"], [\"lat\", 56.25], [\"long\", 61.56]], [[\"city\", \"Петропавловск-Камчатский\"], [\"lat\", 53.2], [\"long\", 158.38]], [[\"city\", \"Новочеркасск\"], [\"lat\", 47.25], [\"long\", 40.5]], [[\"city\", \"Березники\"], [\"lat\", 59.25], [\"long\", 56.46]], [[\"city\", \"Южно-Сахалинск\"], [\"lat\", 46.58], [\"long\", 142.44]], [[\"city\", \"Волгодонск\"], [\"lat\", 47.31], [\"long\", 42.8]], [[\"city\", \"Абакан\"], [\"lat\", 53.44], [\"long\", 91.26]], [[\"city\", \"Обнинск\"], [\"lat\", 55.6], [\"long\", 36.37]], [[\"city\", \"Майкоп\"], [\"lat\", 44.37], [\"long\", 40.5]], [[\"city\", \"Армавир\"], [\"lat\", 44.59], [\"long\", 41.8]], [[\"city\", \"Миасс\"], [\"lat\", 55], [\"long\", 60.5]], [[\"city\", \"Люберцы\"], [\"lat\", 55.4], [\"long\", 37.57]], [[\"city\", \"Рубцовск\"], [\"lat\", 51.32], [\"long\", 81.12]], [[\"city\", \"Ковров\"], [\"lat\", 56.22], [\"long\", 41.2]], [[\"city\", \"Салават\"], [\"lat\", 53.24], [\"long\", 55.53]], [[\"city\", \"Мытищи\"], [\"lat\", 55.54], [\"long\", 37.45]], [[\"city\", \"Находка\"], [\"lat\", 42.49], [\"long\", 132.53]], [[\"city\", \"Уссурийск\"], [\"lat\", 43.49], [\"long\", 131.58]], [[\"city\", \"Коломна\"], [\"lat\", 55.5], [\"long\", 38.47]], [[\"city\", \"Электросталь\"], [\"lat\", 55.46], [\"long\", 38.28]], [[\"city\", \"Колпино\"], [\"lat\", 59.45], [\"long\", 30.36]], [[\"city\", \"Альметьевск\"], [\"lat\", 54.54], [\"long\", 52.19]], [[\"city\", \"Муром\"], [\"lat\", 55.34], [\"long\", 42.2]], [[\"city\", \"Димитровград\"], [\"lat\", 54.14], [\"long\", 49.35]], [[\"city\", \"Новомосковск\"], [\"lat\", 54.5], [\"long\", 38.11]], [[\"city\", \"Первоуральск\"], [\"lat\", 56.55], [\"long\", 59.57]], [[\"city\", \"Норильск\"], [\"lat\", 69.19], [\"long\", 88.11]], [[\"city\", \"Пятигорск\"], [\"lat\", 44.2], [\"long\", 43.4]], [[\"city\", \"Невинномысск\"], [\"lat\", 44.38], [\"long\", 41.56]], [[\"city\", \"Химки\"], [\"lat\", 55.53], [\"long\", 37.26]], [[\"city\", \"Балашиха\"], [\"lat\", 55.5], [\"long\", 37.57]], [[\"city\", \"Королёв\"], [\"lat\", 55.55], [\"long\", 37.49]], [[\"city\", \"Серпухов\"], [\"lat\", 54.55], [\"long\", 37.26]], [[\"city\", \"Одинцово\"], [\"lat\", 55.4], [\"long\", 37.17]], [[\"city\", \"Орехово-Зуево\"], [\"lat\", 55.48], [\"long\", 38.58]], [[\"city\", \"Грозный\"], [\"lat\", 43.19], [\"long\", 45.41]], [[\"city\", \"Камышин\"], [\"lat\", 50.6], [\"long\", 45.24]], [[\"city\", \"Кисловодск\"], [\"lat\", 43.54], [\"long\", 42.43]], [[\"city\", \"Новочебоксарск\"], [\"lat\", 56.7], [\"long\", 47.29]], [[\"city\", \"Черкесск\"], [\"lat\", 44.17], [\"long\", 42.4]], [[\"city\", \"Ачинск\"], [\"lat\", 56.16], [\"long\", 90.29]], [[\"city\", \"Северск\"], [\"lat\", 56.37], [\"long\", 84.52]], [[\"city\", \"Назрань\"], [\"lat\", 43.13], [\"long\", 44.48]], [[\"city\", \"Елец\"], [\"lat\", 52.36], [\"long\", 38.31]], [[\"city\", \"Мичуринск\"], [\"lat\", 52.54], [\"long\", 40.28]], [[\"city\", \"Ногинск\"], [\"lat\", 55.52], [\"long\", 38.29]], [[\"city\", \"Новокуйбышевск\"], [\"lat\", 53.6], [\"long\", 49.53]], [[\"city\", \"Великие Луки\"], [\"lat\", 56.2], [\"long\", 30.31]], [[\"city\", \"Нефтекамск\"], [\"lat\", 56.7], [\"long\", 54.16]], [[\"city\", \"Магадан\"], [\"lat\", 59.34], [\"long\", 150.47]], [[\"city\", \"Октябрьский\"], [\"lat\", 54.28], [\"long\", 53.28]], [[\"city\", \"Ленинск-Кузнецкий\"], [\"lat\", 54.4], [\"long\", 86.1]], [[\"city\", \"Сергиев Посад\"], [\"lat\", 56.19], [\"long\", 38.8]], [[\"city\", \"Арзамас\"], [\"lat\", 55.23], [\"long\", 43.5]], [[\"city\", \"Новотроицк\"], [\"lat\", 51.13], [\"long\", 58.21]], [[\"city\", \"Киселёвск\"], [\"lat\", 53.59], [\"long\", 86.39]], [[\"city\", \"Глазов\"], [\"lat\", 58.8], [\"long\", 52.38]], [[\"city\", \"Канск\"], [\"lat\", 56.13], [\"long\", 95.43]], [[\"city\", \"Соликамск\"], [\"lat\", 59.38], [\"long\", 56.46]], [[\"city\", \"Элиста\"], [\"lat\", 46.19], [\"long\", 44.13]], [[\"city\", \"Сарапул\"], [\"lat\", 56.28], [\"long\", 53.48]], [[\"city\", \"Междуреченск\"], [\"lat\", 53.41], [\"long\", 88.5]], [[\"city\", \"Щёлково\"], [\"lat\", 55.54], [\"long\", 38.1]], [[\"city\", \"Усть-Илимск\"], [\"lat\", 58], [\"long\", 102.4]], [[\"city\", \"Кызыл\"], [\"lat\", 51.43], [\"long\", 94.23]], [[\"city\", \"Усолье-Сибирское\"], [\"lat\", 52.46], [\"long\", 103.38]], [[\"city\", \"Воткинск\"], [\"lat\", 57.3], [\"long\", 53.59]], [[\"city\", \"Новошахтинск\"], [\"lat\", 47.46], [\"long\", 39.56]], [[\"city\", \"Железнодорожный\"], [\"lat\", 55.45], [\"long\", 38.8]], [[\"city\", \"Ессентуки\"], [\"lat\", 44.2], [\"long\", 42.51]], [[\"city\", \"Зеленодольск\"], [\"lat\", 55.5], [\"long\", 48.4]], [[\"city\", \"Серов\"], [\"lat\", 59.37], [\"long\", 60.35]], [[\"city\", \"Кинешма\"], [\"lat\", 57.27], [\"long\", 42.8]], [[\"city\", \"Тобольск\"], [\"lat\", 58.11], [\"long\", 68.14]], [[\"city\", \"Ноябрьск\"], [\"lat\", 63.1], [\"long\", 75.37]], [[\"city\", \"Балашов\"], [\"lat\", 51.32], [\"long\", 43.1]], [[\"city\", \"Железногорск\"], [\"lat\", 52.21], [\"long\", 35.25]], [[\"city\", \"Кузнецк\"], [\"lat\", 53.7], [\"long\", 46.34]], [[\"city\", \"Батайск\"], [\"lat\", 47.8], [\"long\", 39.45]], [[\"city\", \"Дербент\"], [\"lat\", 42.4], [\"long\", 48.17]], [[\"city\", \"Нефтеюганск\"], [\"lat\", 55.6], [\"long\", 54.17]], [[\"city\", \"Жуковский\"], [\"lat\", 55.33], [\"long\", 38.15]], [[\"city\", \"Ухта\"], [\"lat\", 63.34], [\"long\", 53.43]], [[\"city\", \"Анжеро-Судженск\"], [\"lat\", 56.5], [\"long\", 86.1]], [[\"city\", \"Бугульма\"], [\"lat\", 54.32], [\"long\", 52.48]], [[\"city\", \"Новоуральск\"], [\"lat\", 57.15], [\"long\", 59.48]], [[\"city\", \"Красногорск\"], [\"lat\", 55.5], [\"long\", 37.2]], [[\"city\", \"Чайковский\"], [\"lat\", 56.46], [\"long\", 54.5]], [[\"city\", \"Новый Уренгой\"], [\"lat\", 66.5], [\"long\", 76.31]], [[\"city\", \"Губкинский\"], [\"lat\", 64.26], [\"long\", 76.29]], [[\"city\", \"Кирово-Чепецк\"], [\"lat\", 58.33], [\"long\", 50.2]], [[\"city\", \"Клин\"], [\"lat\", 56.2], [\"long\", 36.42]], [[\"city\", \"Хасавюрт\"], [\"lat\", 43.15], [\"long\", 46.35]], [[\"city\", \"Раменское\"], [\"lat\", 55.29], [\"long\", 38.21]], [[\"city\", \"Губкин\"], [\"lat\", 51.17], [\"long\", 37.23]], [[\"city\", \"Озёрск\"], [\"lat\", 55.46], [\"long\", 60.42]], [[\"city\", \"Пушкин\"], [\"lat\", 59.46], [\"long\", 30.19]], [[\"city\", \"Ейск\"], [\"lat\", 46.42], [\"long\", 38.16]], [[\"city\", \"Бузулук\"], [\"lat\", 52.47], [\"long\", 52.16]], [[\"city\", \"Шадринск\"], [\"lat\", 56.5], [\"long\", 63.37]], [[\"city\", \"Бердск\"], [\"lat\", 54.46], [\"long\", 83.5]], [[\"city\", \"Троицк\"], [\"lat\", 54.7], [\"long\", 61.34]], [[\"city\", \"Воркута\"], [\"lat\", 67.31], [\"long\", 64.2]], [[\"city\", \"Юрга\"], [\"lat\", 55.44], [\"long\", 84.55]], [[\"city\", \"Кропоткин\"], [\"lat\", 45.26], [\"long\", 40.34]], [[\"city\", \"Свободный\"], [\"lat\", 51.23], [\"long\", 128.8]], [[\"city\", \"Каменск-Шахтинский\"], [\"lat\", 48.19], [\"long\", 40.15]], [[\"city\", \"Ишимбай\"], [\"lat\", 53.27], [\"long\", 56.3]], [[\"city\", \"Реутов\"], [\"lat\", 55.46], [\"long\", 37.52]], [[\"city\", \"Каспийск\"], [\"lat\", 42.53], [\"long\", 47.38]], [[\"city\", \"Егорьевск\"], [\"lat\", 55.23], [\"long\", 39.2]], [[\"city\", \"Гусь-Хрустальный\"], [\"lat\", 55.37], [\"long\", 40.39]], [[\"city\", \"Копейск\"], [\"lat\", 55.8], [\"long\", 61.39]], [[\"city\", \"Белорецк\"], [\"lat\", 53.58], [\"long\", 58.24]], [[\"city\", \"Белогорск\"], [\"lat\", 50.55], [\"long\", 128.28]], [[\"city\", \"Лысьва\"], [\"lat\", 58.7], [\"long\", 57.47]], [[\"city\", \"Кунгур\"], [\"lat\", 57.26], [\"long\", 56.56]], [[\"city\", \"Минеральные Воды\"], [\"lat\", 44.13], [\"long\", 43.8]], [[\"city\", \"Биробиджан\"], [\"lat\", 48.48], [\"long\", 132.55]], [[\"city\", \"Черногорск\"], [\"lat\", 53.5], [\"long\", 91.13]], [[\"city\", \"Воскресенск\"], [\"lat\", 55.19], [\"long\", 38.42]], [[\"city\", \"Белово\"], [\"lat\", 54.25], [\"long\", 86.17]], [[\"city\", \"Выборг\"], [\"lat\", 60.43], [\"long\", 28.46]], [[\"city\", \"Асбест\"], [\"lat\", 57.1], [\"long\", 61.28]], [[\"city\", \"Азов\"], [\"lat\", 47.6], [\"long\", 39.26]], [[\"city\", \"Гатчина\"], [\"lat\", 59.34], [\"long\", 30.6]], [[\"city\", \"Петергоф\"], [\"lat\", 59.53], [\"long\", 29.54]], [[\"city\", \"Чапаевск\"], [\"lat\", 52.58], [\"long\", 49.41]], [[\"city\", \"Саров\"], [\"lat\", 55.23], [\"long\", 43.5]], [[\"city\", \"Нижний Новгород\"], [\"lat\", 56], [\"long\", null]], [[\"city\", \"Гуково\"], [\"lat\", 48.4], [\"long\", 39.56]], [[\"city\", \"Павловский Посад\"], [\"lat\", 55.46], [\"long\", 38.4]], [[\"city\", \"Артем\"], [\"lat\", 43.22], [\"long\", 132.11]], [[\"city\", \"Шуя\"], [\"lat\", 56.52], [\"long\", 41.21]], [[\"city\", \"Ступино\"], [\"lat\", 54.53], [\"long\", 38.7]], [[\"city\", \"Апатиты\"], [\"lat\", 67.34], [\"long\", 33.23]], [[\"city\", \"Арсеньев\"], [\"lat\", 44.1], [\"long\", 133.17]], [[\"city\", \"Ревда\"], [\"lat\", 56.49], [\"long\", 59.57]], [[\"city\", \"Борисоглебск\"], [\"lat\", 51.22], [\"long\", 42.5]], [[\"city\", \"Котлас\"], [\"lat\", 61.16], [\"long\", 46.39]], [[\"city\", \"Лабинск\"], [\"lat\", 44.38], [\"long\", 40.43]], [[\"city\", \"Славянск-на-Кубани\"], [\"lat\", 45.15], [\"long\", 38.7]], [[\"city\", \"Краснотурьинск\"], [\"lat\", 59.47], [\"long\", 60.29]], [[\"city\", \"Будённовск\"], [\"lat\", 44.47], [\"long\", 44.8]], [[\"city\", \"Россошь\"], [\"lat\", 50.13], [\"long\", 39.35]], [[\"city\", \"Туймазы\"], [\"lat\", 54.36], [\"long\", 53.42]], [[\"city\", \"Сальск\"], [\"lat\", 46.28], [\"long\", 41.32]], [[\"city\", \"Дмитров\"], [\"lat\", 56.21], [\"long\", 37.32]], [[\"city\", \"Щёкино\"], [\"lat\", 54.1], [\"long\", 37.31]], [[\"city\", \"Мелеуз\"], [\"lat\", 52.58], [\"long\", 55.56]], [[\"city\", \"Заречный\"], [\"lat\", 53.8], [\"long\", 46.35]], [[\"city\", \"Бор\"], [\"lat\", 56.21], [\"long\", 44.5]], [[\"city\", \"Ишим\"], [\"lat\", 56.7], [\"long\", 69.28]], [[\"city\", \"Назарово\"], [\"lat\", 56.1], [\"long\", 90.23]], [[\"city\", \"Выкса\"], [\"lat\", 55.19], [\"long\", 42.1]], [[\"city\", \"Балахна\"], [\"lat\", 56.29], [\"long\", 43.38]], [[\"city\", \"Талнах\"], [\"lat\", 69.3], [\"long\", 88.27]], [[\"city\", \"Волжск\"], [\"lat\", 55.51], [\"long\", 48.31]], [[\"city\", \"Белебей\"], [\"lat\", 54.7], [\"long\", 54.7]], [[\"city\", \"Боровичи\"], [\"lat\", 58.24], [\"long\", 33.54]], [[\"city\", \"Крымск\"], [\"lat\", 44.56], [\"long\", 37.58]], [[\"city\", \"Новоалтайск\"], [\"lat\", 53.24], [\"long\", 83.56]], [[\"city\", \"Сибай\"], [\"lat\", 52.43], [\"long\", 58.4]], [[\"city\", \"Нягань\"], [\"lat\", 62.9], [\"long\", 65.23]], [[\"city\", \"Осинники\"], [\"lat\", 53.37], [\"long\", 87.2]], [[\"city\", \"Отрадный\"], [\"lat\", 53.2], [\"long\", 51.22]], [[\"city\", \"Тулун\"], [\"lat\", 54.34], [\"long\", 100.34]], [[\"city\", \"Верхняя Салда\"], [\"lat\", 58.4], [\"long\", 60.33]], [[\"city\", \"Амурск\"], [\"lat\", 50.14], [\"long\", 136.53]], [[\"city\", \"Рузаевка\"], [\"lat\", 54.4], [\"long\", 44.57]], [[\"city\", \"Чебаркуль\"], [\"lat\", 54.59], [\"long\", 60.22]], [[\"city\", \"Берёзовский\"], [\"lat\", 55.4], [\"long\", 86.16]], [[\"city\", \"Сатка\"], [\"lat\", 55.2], [\"long\", 59.2]], [[\"city\", \"Инта\"], [\"lat\", 66.2], [\"long\", 60.1]], [[\"city\", \"Можга\"], [\"lat\", 56.27], [\"long\", 52.11]], [[\"city\", \"Радужный\"], [\"lat\", 62.5], [\"long\", 77.14]], [[\"city\", \"Лесозаводск\"], [\"lat\", 45.29], [\"long\", 133.25]], [[\"city\", \"Красноуфимск\"], [\"lat\", 56.37], [\"long\", 57.45]], [[\"city\", \"Каменка\"], [\"lat\", 53.11], [\"long\", 44.2]], [[\"city\", \"Мыски\"], [\"lat\", 53.44], [\"long\", 87.47]]]\n\n\nconst arrCityRight = [[[\"city\", \"Москва\"], [\"lat\", 55.45], [\"long\", 37.37]], [[\"city\", \"Санкт-Петербург\"], [\"lat\", 59.56], [\"long\", 30.19]], [[\"city\", \"Новосибирск\"], [\"lat\", 55.1], [\"long\", 82.56]], [[\"city\", \"Екатеринбург\"], [\"lat\", 56.51], [\"long\", 60.36]], [[\"city\", \"Самара\"], [\"lat\", 53.14], [\"long\", 50.1]], [[\"city\", \"Омск\"], [\"lat\", 54.59], [\"long\", 73.22]], [[\"city\", \"Казань\"], [\"lat\", 55.47], [\"long\", 49.1]], [[\"city\", \"Уфа\"], [\"lat\", 54.49], [\"long\", 56.4]], [[\"city\", \"Челябинск\"], [\"lat\", 55.9], [\"long\", 61.26]], [[\"city\", \"Ростов-на-Дону\"], [\"lat\", 47.14], [\"long\", 39.42]], [[\"city\", \"Пермь\"], [\"lat\", 58], [\"long\", 56.14]], [[\"city\", \"Волгоград\"], [\"lat\", 48.43], [\"long\", 44.29]], [[\"city\", \"Воронеж\"], [\"lat\", 51.43], [\"long\", 39.16]], [[\"city\", \"Красноярск\"], [\"lat\", 56.1], [\"long\", 93.4]], [[\"city\", \"Саратов\"], [\"lat\", 51.33], [\"long\", 46]], [[\"city\", \"Тольятти\"], [\"lat\", 53.29], [\"long\", 49.31]], [[\"city\", \"Ульяновск\"], [\"lat\", 54.19], [\"long\", 48.22]], [[\"city\", \"Ижевск\"], [\"lat\", 56.5], [\"long\", 53.11]], [[\"city\", \"Краснодар\"], [\"lat\", 45.2], [\"long\", 38.58]], [[\"city\", \"Ярославль\"], [\"lat\", 57.37], [\"long\", 39.51]], [[\"city\", \"Хабаровск\"], [\"lat\", 48.25], [\"long\", 135.7]], [[\"city\", \"Владивосток\"], [\"lat\", 43.8], [\"long\", 131.54]], [[\"city\", \"Иркутск\"], [\"lat\", 52.2], [\"long\", 104.14]], [[\"city\", \"Барнаул\"], [\"lat\", 53.21], [\"long\", 83.45]], [[\"city\", \"Новокузнецк\"], [\"lat\", 53.45], [\"long\", 87.7]], [[\"city\", \"Липецк\"], [\"lat\", 52.37], [\"long\", 39.37]], [[\"city\", \"Пенза\"], [\"lat\", 53.12], [\"long\", 45]], [[\"city\", \"Рязань\"], [\"lat\", 54.36], [\"long\", 39.42]], [[\"city\", \"Оренбург\"], [\"lat\", 51.47], [\"long\", 55.6]], [[\"city\", \"Набережные Челны\"], [\"lat\", 55.41], [\"long\", 52.19]], [[\"city\", \"Тюмень\"], [\"lat\", 57.1], [\"long\", 65.3]], [[\"city\", \"Тула\"], [\"lat\", 54.13], [\"long\", 37.36]], [[\"city\", \"Кемерово\"], [\"lat\", 55.25], [\"long\", 86.5]], [[\"city\", \"Астрахань\"], [\"lat\", 46.22], [\"long\", 48.5]], [[\"city\", \"Томск\"], [\"lat\", 56.29], [\"long\", 84.59]], [[\"city\", \"Киров\"], [\"lat\", 58.36], [\"long\", 49.39]], [[\"city\", \"Чебоксары\"], [\"lat\", 56.8], [\"long\", 47.14]], [[\"city\", \"Брянск\"], [\"lat\", 53.16], [\"long\", 34.25]], [[\"city\", \"Иваново\"], [\"lat\", 57.1], [\"long\", 40.59]], [[\"city\", \"Тверь\"], [\"lat\", 56.52], [\"long\", 35.55]], [[\"city\", \"Курск\"], [\"lat\", 51.44], [\"long\", 36.11]], [[\"city\", \"Магнитогорск\"], [\"lat\", 53.25], [\"long\", 58.58]], [[\"city\", \"Калининград\"], [\"lat\", 54.43], [\"long\", 20.31]], [[\"city\", \"Нижний Тагил\"], [\"lat\", 57.56], [\"long\", 60.1]], [[\"city\", \"Улан-Удэ\"], [\"lat\", 51.5], [\"long\", 107.36]], [[\"city\", \"Сочи\"], [\"lat\", 43.35], [\"long\", 39.44]], [[\"city\", \"Курган\"], [\"lat\", 55.26], [\"long\", 65.19]], [[\"city\", \"Мурманск\"], [\"lat\", 68.58], [\"long\", 33.5]], [[\"city\", \"Архангельск\"], [\"lat\", 64.32], [\"long\", 40.32]], [[\"city\", \"Смоленск\"], [\"lat\", 54.47], [\"long\", 32.3]], [[\"city\", \"Белгород\"], [\"lat\", 50.37], [\"long\", 36.35]], [[\"city\", \"Ставрополь\"], [\"lat\", 45.3], [\"long\", 41.58]], [[\"city\", \"Орел\"], [\"lat\", 52.58], [\"long\", 36.4]], [[\"city\", \"Калуга\"], [\"lat\", 54.32], [\"long\", 36.17]], [[\"city\", \"Владимир\"], [\"lat\", 56.9], [\"long\", 40.25]], [[\"city\", \"Махачкала\"], [\"lat\", 42.59], [\"long\", 47.31]], [[\"city\", \"Череповец\"], [\"lat\", 59.8], [\"long\", 37.55]], [[\"city\", \"Владикавказ\"], [\"lat\", 43.2], [\"long\", 44.4]], [[\"city\", \"Саранск\"], [\"lat\", 54.11], [\"long\", 45.1]], [[\"city\", \"Тамбов\"], [\"lat\", 52.43], [\"long\", 41.25]], [[\"city\", \"Чита\"], [\"lat\", 52.3], [\"long\", 113.28]], [[\"city\", \"Вологда\"], [\"lat\", 59.14], [\"long\", 39.54]], [[\"city\", \"Кострома\"], [\"lat\", 57.46], [\"long\", 40.56]], [[\"city\", \"Комсомольск-на-Амуре\"], [\"lat\", 50.34], [\"long\", 137]], [[\"city\", \"Волжский\"], [\"lat\", 48.49], [\"long\", 44.44]], [[\"city\", \"Таганрог\"], [\"lat\", 47.14], [\"long\", 38.54]], [[\"city\", \"Петрозаводск\"], [\"lat\", 61.47], [\"long\", 34.2]], [[\"city\", \"Братск\"], [\"lat\", 56.18], [\"long\", 101.43]], [[\"city\", \"Сургут\"], [\"lat\", 61.15], [\"long\", 73.23]], [[\"city\", \"Дзержинск\"], [\"lat\", 56.16], [\"long\", 43.24]], [[\"city\", \"Орск\"], [\"lat\", 51.13], [\"long\", 58.38]], [[\"city\", \"Стерлитамак\"], [\"lat\", 53.38], [\"long\", 55.57]], [[\"city\", \"Ангарск\"], [\"lat\", 52.34], [\"long\", 103.55]], [[\"city\", \"Йошкар-Ола\"], [\"lat\", 56.38], [\"long\", 47.52]], [[\"city\", \"Рыбинск\"], [\"lat\", 58.3], [\"long\", 38.5]], [[\"city\", \"Прокопьевск\"], [\"lat\", 53.54], [\"long\", 86.43]], [[\"city\", \"Нижневартовск\"], [\"lat\", 60.56], [\"long\", 76.32]], [[\"city\", \"Великий Новгород\"], [\"lat\", 58.32], [\"long\", 31.16]], [[\"city\", \"Сыктывкар\"], [\"lat\", 61.4], [\"long\", 50.49]], [[\"city\", \"Нижнекамск\"], [\"lat\", 55.38], [\"long\", 51.47]], [[\"city\", \"Бийск\"], [\"lat\", 52.32], [\"long\", 85.1]], [[\"city\", \"Благовещенск\"], [\"lat\", 50.17], [\"long\", 127.32]], [[\"city\", \"Северодвинск\"], [\"lat\", 64.34], [\"long\", 39.49]], [[\"city\", \"Шахты\"], [\"lat\", 47.41], [\"long\", 40.15]], [[\"city\", \"Старый Оскол\"], [\"lat\", 51.18], [\"long\", 37.5]], [[\"city\", \"Зеленоград\"], [\"lat\", 55.56], [\"long\", 37.17]], [[\"city\", \"Новороссийск\"], [\"lat\", 44.43], [\"long\", 37.46]], [[\"city\", \"Балаково\"], [\"lat\", 52], [\"long\", 47.47]], [[\"city\", \"Псков\"], [\"lat\", 57.49], [\"long\", 28.2]], [[\"city\", \"Златоуст\"], [\"lat\", 55.11], [\"long\", 59.38]], [[\"city\", \"Якутск\"], [\"lat\", 62.1], [\"long\", 129.5]], [[\"city\", \"Подольск\"], [\"lat\", 55.26], [\"long\", 37.34]], [[\"city\", \"Энгельс\"], [\"lat\", 51.29], [\"long\", 46.8]], [[\"city\", \"Сызрань\"], [\"lat\", 53.1], [\"long\", 48.27]], [[\"city\", \"Каменск-Уральский\"], [\"lat\", 56.25], [\"long\", 61.56]], [[\"city\", \"Петропавловск-Камчатский\"], [\"lat\", 53.2], [\"long\", 158.38]], [[\"city\", \"Новочеркасск\"], [\"lat\", 47.25], [\"long\", 40.5]], [[\"city\", \"Березники\"], [\"lat\", 59.25], [\"long\", 56.46]], [[\"city\", \"Южно-Сахалинск\"], [\"lat\", 46.58], [\"long\", 142.44]], [[\"city\", \"Волгодонск\"], [\"lat\", 47.31], [\"long\", 42.8]], [[\"city\", \"Абакан\"], [\"lat\", 53.44], [\"long\", 91.26]], [[\"city\", \"Обнинск\"], [\"lat\", 55.6], [\"long\", 36.37]], [[\"city\", \"Майкоп\"], [\"lat\", 44.37], [\"long\", 40.5]], [[\"city\", \"Армавир\"], [\"lat\", 44.59], [\"long\", 41.8]], [[\"city\", \"Миасс\"], [\"lat\", 55], [\"long\", 60.5]], [[\"city\", \"Люберцы\"], [\"lat\", 55.4], [\"long\", 37.57]], [[\"city\", \"Рубцовск\"], [\"lat\", 51.32], [\"long\", 81.12]], [[\"city\", \"Ковров\"], [\"lat\", 56.22], [\"long\", 41.2]], [[\"city\", \"Салават\"], [\"lat\", 53.24], [\"long\", 55.53]], [[\"city\", \"Мытищи\"], [\"lat\", 55.54], [\"long\", 37.45]], [[\"city\", \"Находка\"], [\"lat\", 42.49], [\"long\", 132.53]], [[\"city\", \"Уссурийск\"], [\"lat\", 43.49], [\"long\", 131.58]], [[\"city\", \"Коломна\"], [\"lat\", 55.5], [\"long\", 38.47]], [[\"city\", \"Электросталь\"], [\"lat\", 55.46], [\"long\", 38.28]], [[\"city\", \"Колпино\"], [\"lat\", 59.45], [\"long\", 30.36]], [[\"city\", \"Альметьевск\"], [\"lat\", 54.54], [\"long\", 52.19]], [[\"city\", \"Муром\"], [\"lat\", 55.34], [\"long\", 42.2]], [[\"city\", \"Димитровград\"], [\"lat\", 54.14], [\"long\", 49.35]], [[\"city\", \"Новомосковск\"], [\"lat\", 54.5], [\"long\", 38.11]], [[\"city\", \"Первоуральск\"], [\"lat\", 56.55], [\"long\", 59.57]], [[\"city\", \"Норильск\"], [\"lat\", 69.19], [\"long\", 88.11]], [[\"city\", \"Пятигорск\"], [\"lat\", 44.2], [\"long\", 43.4]], [[\"city\", \"Невинномысск\"], [\"lat\", 44.38], [\"long\", 41.56]], [[\"city\", \"Химки\"], [\"lat\", 55.53], [\"long\", 37.26]], [[\"city\", \"Балашиха\"], [\"lat\", 55.5], [\"long\", 37.57]], [[\"city\", \"Королёв\"], [\"lat\", 55.55], [\"long\", 37.49]], [[\"city\", \"Серпухов\"], [\"lat\", 54.55], [\"long\", 37.26]], [[\"city\", \"Одинцово\"], [\"lat\", 55.4], [\"long\", 37.17]], [[\"city\", \"Орехово-Зуево\"], [\"lat\", 55.48], [\"long\", 38.58]], [[\"city\", \"Грозный\"], [\"lat\", 43.19], [\"long\", 45.41]], [[\"city\", \"Камышин\"], [\"lat\", 50.6], [\"long\", 45.24]], [[\"city\", \"Кисловодск\"], [\"lat\", 43.54], [\"long\", 42.43]], [[\"city\", \"Новочебоксарск\"], [\"lat\", 56.7], [\"long\", 47.29]], [[\"city\", \"Черкесск\"], [\"lat\", 44.17], [\"long\", 42.4]], [[\"city\", \"Ачинск\"], [\"lat\", 56.16], [\"long\", 90.29]], [[\"city\", \"Северск\"], [\"lat\", 56.37], [\"long\", 84.52]], [[\"city\", \"Назрань\"], [\"lat\", 43.13], [\"long\", 44.48]], [[\"city\", \"Елец\"], [\"lat\", 52.36], [\"long\", 38.31]], [[\"city\", \"Мичуринск\"], [\"lat\", 52.54], [\"long\", 40.28]], [[\"city\", \"Ногинск\"], [\"lat\", 55.52], [\"long\", 38.29]], [[\"city\", \"Новокуйбышевск\"], [\"lat\", 53.6], [\"long\", 49.53]], [[\"city\", \"Великие Луки\"], [\"lat\", 56.2], [\"long\", 30.31]], [[\"city\", \"Нефтекамск\"], [\"lat\", 56.7], [\"long\", 54.16]], [[\"city\", \"Магадан\"], [\"lat\", 59.34], [\"long\", 150.47]], [[\"city\", \"Октябрьский\"], [\"lat\", 54.28], [\"long\", 53.28]], [[\"city\", \"Ленинск-Кузнецкий\"], [\"lat\", 54.4], [\"long\", 86.1]], [[\"city\", \"Сергиев Посад\"], [\"lat\", 56.19], [\"long\", 38.8]], [[\"city\", \"Арзамас\"], [\"lat\", 55.23], [\"long\", 43.5]], [[\"city\", \"Новотроицк\"], [\"lat\", 51.13], [\"long\", 58.21]], [[\"city\", \"Киселёвск\"], [\"lat\", 53.59], [\"long\", 86.39]], [[\"city\", \"Глазов\"], [\"lat\", 58.8], [\"long\", 52.38]], [[\"city\", \"Канск\"], [\"lat\", 56.13], [\"long\", 95.43]], [[\"city\", \"Соликамск\"], [\"lat\", 59.38], [\"long\", 56.46]], [[\"city\", \"Элиста\"], [\"lat\", 46.19], [\"long\", 44.13]], [[\"city\", \"Сарапул\"], [\"lat\", 56.28], [\"long\", 53.48]], [[\"city\", \"Междуреченск\"], [\"lat\", 53.41], [\"long\", 88.5]], [[\"city\", \"Щёлково\"], [\"lat\", 55.54], [\"long\", 38.1]], [[\"city\", \"Усть-Илимск\"], [\"lat\", 58], [\"long\", 102.4]], [[\"city\", \"Кызыл\"], [\"lat\", 51.43], [\"long\", 94.23]], [[\"city\", \"Усолье-Сибирское\"], [\"lat\", 52.46], [\"long\", 103.38]], [[\"city\", \"Воткинск\"], [\"lat\", 57.3], [\"long\", 53.59]], [[\"city\", \"Новошахтинск\"], [\"lat\", 47.46], [\"long\", 39.56]], [[\"city\", \"Железнодорожный\"], [\"lat\", 55.45], [\"long\", 38.8]], [[\"city\", \"Ессентуки\"], [\"lat\", 44.2], [\"long\", 42.51]], [[\"city\", \"Зеленодольск\"], [\"lat\", 55.5], [\"long\", 48.4]], [[\"city\", \"Серов\"], [\"lat\", 59.37], [\"long\", 60.35]], [[\"city\", \"Кинешма\"], [\"lat\", 57.27], [\"long\", 42.8]], [[\"city\", \"Тобольск\"], [\"lat\", 58.11], [\"long\", 68.14]], [[\"city\", \"Ноябрьск\"], [\"lat\", 63.1], [\"long\", 75.37]], [[\"city\", \"Балашов\"], [\"lat\", 51.32], [\"long\", 43.1]], [[\"city\", \"Железногорск\"], [\"lat\", 52.21], [\"long\", 35.25]], [[\"city\", \"Кузнецк\"], [\"lat\", 53.7], [\"long\", 46.34]], [[\"city\", \"Батайск\"], [\"lat\", 47.8], [\"long\", 39.45]], [[\"city\", \"Дербент\"], [\"lat\", 42.4], [\"long\", 48.17]], [[\"city\", \"Нефтеюганск\"], [\"lat\", 55.6], [\"long\", 54.17]], [[\"city\", \"Жуковский\"], [\"lat\", 55.33], [\"long\", 38.15]], [[\"city\", \"Ухта\"], [\"lat\", 63.34], [\"long\", 53.43]], [[\"city\", \"Анжеро-Судженск\"], [\"lat\", 56.5], [\"long\", 86.1]], [[\"city\", \"Бугульма\"], [\"lat\", 54.32], [\"long\", 52.48]], [[\"city\", \"Новоуральск\"], [\"lat\", 57.15], [\"long\", 59.48]], [[\"city\", \"Красногорск\"], [\"lat\", 55.5], [\"long\", 37.2]], [[\"city\", \"Чайковский\"], [\"lat\", 56.46], [\"long\", 54.5]], [[\"city\", \"Новый Уренгой\"], [\"lat\", 66.5], [\"long\", 76.31]], [[\"city\", \"Губкинский\"], [\"lat\", 64.26], [\"long\", 76.29]], [[\"city\", \"Кирово-Чепецк\"], [\"lat\", 58.33], [\"long\", 50.2]], [[\"city\", \"Клин\"], [\"lat\", 56.2], [\"long\", 36.42]], [[\"city\", \"Хасавюрт\"], [\"lat\", 43.15], [\"long\", 46.35]], [[\"city\", \"Раменское\"], [\"lat\", 55.29], [\"long\", 38.21]], [[\"city\", \"Губкин\"], [\"lat\", 51.17], [\"long\", 37.23]], [[\"city\", \"Озёрск\"], [\"lat\", 55.46], [\"long\", 60.42]], [[\"city\", \"Пушкин\"], [\"lat\", 59.46], [\"long\", 30.19]], [[\"city\", \"Ейск\"], [\"lat\", 46.42], [\"long\", 38.16]], [[\"city\", \"Бузулук\"], [\"lat\", 52.47], [\"long\", 52.16]], [[\"city\", \"Шадринск\"], [\"lat\", 56.5], [\"long\", 63.37]], [[\"city\", \"Бердск\"], [\"lat\", 54.46], [\"long\", 83.5]], [[\"city\", \"Троицк\"], [\"lat\", 54.7], [\"long\", 61.34]], [[\"city\", \"Воркута\"], [\"lat\", 67.31], [\"long\", 64.2]], [[\"city\", \"Юрга\"], [\"lat\", 55.44], [\"long\", 84.55]], [[\"city\", \"Кропоткин\"], [\"lat\", 45.26], [\"long\", 40.34]], [[\"city\", \"Свободный\"], [\"lat\", 51.23], [\"long\", 128.8]], [[\"city\", \"Каменск-Шахтинский\"], [\"lat\", 48.19], [\"long\", 40.15]], [[\"city\", \"Ишимбай\"], [\"lat\", 53.27], [\"long\", 56.3]], [[\"city\", \"Реутов\"], [\"lat\", 55.46], [\"long\", 37.52]], [[\"city\", \"Каспийск\"], [\"lat\", 42.53], [\"long\", 47.38]], [[\"city\", \"Егорьевск\"], [\"lat\", 55.23], [\"long\", 39.2]], [[\"city\", \"Гусь-Хрустальный\"], [\"lat\", 55.37], [\"long\", 40.39]], [[\"city\", \"Копейск\"], [\"lat\", 55.8], [\"long\", 61.39]], [[\"city\", \"Белорецк\"], [\"lat\", 53.58], [\"long\", 58.24]], [[\"city\", \"Белогорск\"], [\"lat\", 50.55], [\"long\", 128.28]], [[\"city\", \"Лысьва\"], [\"lat\", 58.7], [\"long\", 57.47]], [[\"city\", \"Кунгур\"], [\"lat\", 57.26], [\"long\", 56.56]], [[\"city\", \"Минеральные Воды\"], [\"lat\", 44.13], [\"long\", 43.8]], [[\"city\", \"Биробиджан\"], [\"lat\", 48.48], [\"long\", 132.55]], [[\"city\", \"Черногорск\"], [\"lat\", 53.5], [\"long\", 91.13]], [[\"city\", \"Воскресенск\"], [\"lat\", 55.19], [\"long\", 38.42]], [[\"city\", \"Белово\"], [\"lat\", 54.25], [\"long\", 86.17]], [[\"city\", \"Выборг\"], [\"lat\", 60.43], [\"long\", 28.46]], [[\"city\", \"Асбест\"], [\"lat\", 57.1], [\"long\", 61.28]], [[\"city\", \"Азов\"], [\"lat\", 47.6], [\"long\", 39.26]], [[\"city\", \"Гатчина\"], [\"lat\", 59.34], [\"long\", 30.6]], [[\"city\", \"Петергоф\"], [\"lat\", 59.53], [\"long\", 29.54]], [[\"city\", \"Чапаевск\"], [\"lat\", 52.58], [\"long\", 49.41]], [[\"city\", \"Саров\"], [\"lat\", 55.23], [\"long\", 43.5]], [[\"city\", \"Нижний Новгород\"], [\"lat\", 56], [\"long\", null]], [[\"city\", \"Гуково\"], [\"lat\", 48.4], [\"long\", 39.56]], [[\"city\", \"Павловский Посад\"], [\"lat\", 55.46], [\"long\", 38.4]], [[\"city\", \"Артем\"], [\"lat\", 43.22], [\"long\", 132.11]], [[\"city\", \"Шуя\"], [\"lat\", 56.52], [\"long\", 41.21]], [[\"city\", \"Ступино\"], [\"lat\", 54.53], [\"long\", 38.7]], [[\"city\", \"Апатиты\"], [\"lat\", 67.34], [\"long\", 33.23]], [[\"city\", \"Арсеньев\"], [\"lat\", 44.1], [\"long\", 133.17]], [[\"city\", \"Ревда\"], [\"lat\", 56.49], [\"long\", 59.57]], [[\"city\", \"Борисоглебск\"], [\"lat\", 51.22], [\"long\", 42.5]], [[\"city\", \"Котлас\"], [\"lat\", 61.16], [\"long\", 46.39]], [[\"city\", \"Лабинск\"], [\"lat\", 44.38], [\"long\", 40.43]], [[\"city\", \"Славянск-на-Кубани\"], [\"lat\", 45.15], [\"long\", 38.7]], [[\"city\", \"Краснотурьинск\"], [\"lat\", 59.47], [\"long\", 60.29]], [[\"city\", \"Будённовск\"], [\"lat\", 44.47], [\"long\", 44.8]], [[\"city\", \"Россошь\"], [\"lat\", 50.13], [\"long\", 39.35]], [[\"city\", \"Туймазы\"], [\"lat\", 54.36], [\"long\", 53.42]], [[\"city\", \"Сальск\"], [\"lat\", 46.28], [\"long\", 41.32]], [[\"city\", \"Дмитров\"], [\"lat\", 56.21], [\"long\", 37.32]], [[\"city\", \"Щёкино\"], [\"lat\", 54.1], [\"long\", 37.31]], [[\"city\", \"Мелеуз\"], [\"lat\", 52.58], [\"long\", 55.56]], [[\"city\", \"Заречный\"], [\"lat\", 53.8], [\"long\", 46.35]], [[\"city\", \"Бор\"], [\"lat\", 56.21], [\"long\", 44.5]], [[\"city\", \"Ишим\"], [\"lat\", 56.7], [\"long\", 69.28]], [[\"city\", \"Назарово\"], [\"lat\", 56.1], [\"long\", 90.23]], [[\"city\", \"Выкса\"], [\"lat\", 55.19], [\"long\", 42.1]], [[\"city\", \"Балахна\"], [\"lat\", 56.29], [\"long\", 43.38]], [[\"city\", \"Талнах\"], [\"lat\", 69.3], [\"long\", 88.27]], [[\"city\", \"Волжск\"], [\"lat\", 55.51], [\"long\", 48.31]], [[\"city\", \"Белебей\"], [\"lat\", 54.7], [\"long\", 54.7]], [[\"city\", \"Боровичи\"], [\"lat\", 58.24], [\"long\", 33.54]], [[\"city\", \"Крымск\"], [\"lat\", 44.56], [\"long\", 37.58]], [[\"city\", \"Новоалтайск\"], [\"lat\", 53.24], [\"long\", 83.56]], [[\"city\", \"Сибай\"], [\"lat\", 52.43], [\"long\", 58.4]], [[\"city\", \"Нягань\"], [\"lat\", 62.9], [\"long\", 65.23]], [[\"city\", \"Осинники\"], [\"lat\", 53.37], [\"long\", 87.2]], [[\"city\", \"Отрадный\"], [\"lat\", 53.2], [\"long\", 51.22]], [[\"city\", \"Тулун\"], [\"lat\", 54.34], [\"long\", 100.34]], [[\"city\", \"Верхняя Салда\"], [\"lat\", 58.4], [\"long\", 60.33]], [[\"city\", \"Амурск\"], [\"lat\", 50.14], [\"long\", 136.53]], [[\"city\", \"Рузаевка\"], [\"lat\", 54.4], [\"long\", 44.57]], [[\"city\", \"Чебаркуль\"], [\"lat\", 54.59], [\"long\", 60.22]], [[\"city\", \"Берёзовский\"], [\"lat\", 55.4], [\"long\", 86.16]], [[\"city\", \"Сатка\"], [\"lat\", 55.2], [\"long\", 59.2]], [[\"city\", \"Инта\"], [\"lat\", 66.2], [\"long\", 60.1]], [[\"city\", \"Можга\"], [\"lat\", 56.27], [\"long\", 52.11]], [[\"city\", \"Радужный\"], [\"lat\", 62.5], [\"long\", 77.14]], [[\"city\", \"Лесозаводск\"], [\"lat\", 45.29], [\"long\", 133.25]], [[\"city\", \"Красноуфимск\"], [\"lat\", 56.37], [\"long\", 57.45]], [[\"city\", \"Каменка\"], [\"lat\", 53.11], [\"long\", 44.2]], [[\"city\", \"Мыски\"], [\"lat\", 53.44], [\"long\", 87.47]]]\n\nconst App = () => {\n\n\tconst [activePanel, setActivePanel] = useState(\"Intro\"); \n\tconst [history, setHistory] = useState(['Home']);\n\tconst [scheme, SetStateScheme] = useState('space_gray'); \n\tconst [position, setStatePosition] = useState();\n\tconst [geolocation, setStateGeolocation] = useState();\n\tconst [left, setStateLeft] = useState(arrCityLeft)\n\tconst [right, setStateRight] = useState(arrCityRight)\n\tconst [chooseLevel, setStateChooseLevel] = useState('Страны')\n\tconst [descriptionButton, setStateDescriptionButton] = useState('Активирована игра по городам России.')\n\tconst [title, setStateTitle] = useState(<h1>Какой город <br/> ближе?</h1>)\n\n\n\tfunction goToPage(name) {\n\t\twindow.history.pushState({ panel: name }, name); \n\t\tsetActivePanel(name); \n\t\thistory.push(name);\n\t};\n\n\tconst goBack = () => {\n\t\tif (history.length === 1) {  \n\t\t\tbridge.send(\"VKWebAppClose\", { \"status\": \"success\" }); \n\t\t} else if (history.length > 1) {\n\t\t\thistory.pop() \n\t\t\tsetActivePanel(history[history.length - 1]) \n\t\t}\n\t}\n\n\tconst goToHome = () => {\n\t\tsetActivePanel('Home')\n\t}\n\n\tfunction camelCase(scheme, needChange = false) {\n\t\tlet isLight = lights.includes(scheme);\n\n\t\tif (needChange) {\n\t\t\tisLight = !isLight;\n\t\t}\n\t\tSetStateScheme(isLight ? 'bright_light' : 'space_gray');\n\n\t\tbridge.send('VKWebAppSetViewSettings', {\n\t\t\t'status_bar_style': isLight ? 'dark' : 'light',\n\t\t\t'action_bar_color': isLight ? '#ffffff' : '#191919'\n\t\t});\n\t}\n\n\tuseEffect(() => {\n\t\t\n\t\t\n\t\tbridge.send(\"VKWebAppStorageGet\", { \"keys\": [\"geo\", \"pos\", \"hasSeenOnboarding7\"] })\n\t\t\t.then(data => {\n\t\t\t\tsetStatePosition(data.keys[1].value)\n\t\t\t\tsetStateGeolocation(data.keys[0].value)\n\t\t\t\tif (data.keys[2].value === 'true') {\n\t\t\t\t\tsetActivePanel('Home')\n\t\t\t\t} else {\n\t\t\t\t\tsetActivePanel('Intro')\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(e=>{\n\t\t\t\tconsole.log(e);\n\t\t\t})\n\t\tbridge.subscribe(({ detail: { type, data } }) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\t\n\t\t\t}\n\t\t});\n\t\twindow.addEventListener('popstate', () => goBack()); \n\n\t}, []);\n\n\tconst savePositionGlobal = (pos, geo) => {\n\t\tsetStatePosition(pos)\n\t\tsetStateGeolocation(geo)\n\t\tbridge.send(\"VKWebAppStorageSet\", { \"key\": \"pos\", \"value\": pos });\n\t\tbridge.send(\"VKWebAppStorageSet\", { \"key\": \"geo\", \"value\": geo });\n\t}\n\n\n\tconst [iconStatus, setStateIconStatus] = useState(<Icon24Fullscreen width={40} height={40}/>)\n\n\tconst changeLevel = () => {\n\n\n\t\tif (right === arrCityRight) {\n\t\t\tsetStateRight(arrCountryRight)\n\t\t\tsetStateLeft(arrCountryLeft)\n\t\t\tsetStateChooseLevel('Города')\n\t\t\tsetStateDescriptionButton('Активирована игра по странам мира.')\n\t\t\tsetStateTitle(<h1>Какая страна <br /> ближе?</h1>)\n\t\t\tsetStateIconStatus(<Icon24FullscreenExit width={40} height={40}/>)\n\t\t}\n\t\tif (right === arrCountryRight ) {\n\t\t\tsetStateRight(arrCityRight)\n\t\t\tsetStateLeft(arrCityLeft)\n\t\t\tsetStateChooseLevel('Страны')\n\t\t\tsetStateDescriptionButton('Активирована игра по городам России.')\n\t\t\tsetStateTitle(<h1>Какой город <br/> ближе?</h1>)\n\t\t\tsetStateIconStatus(<Icon24Fullscreen width={40} height={40}/>)\n\n\t\t}\n\t\t\n\n\t\t}\n\n\n\t\n\n\treturn  (\n\n\t\t<ConfigProvider isWebView={true} scheme={scheme}>\n\t\t\t<View \n\t\t\t\tactivePanel={activePanel} \n\t\t\t\thistory={history} \n\t\t\t\tonSwipeBack={goBack} \n\t\t\t>\n\t\t\t\t<Loader id=\"Loader\"\n\t\t\t\t\tscheme={scheme}\n\t\t\t\t\tcamelCase={camelCase}\n\t\t\t\t\tgoToPage={goToPage}\n\t\t\t\t/>\n\t\t\t\t<Intro id=\"Intro\"\n\t\t\t\t\tscheme={scheme}\n\t\t\t\t\tcamelCase={camelCase}\n\t\t\t\t\tgoToPage={goToPage}\n\t\t\t\t\tgoToHome={goToHome}\n\t\t\t\t/>\n\t\t\t\t<Home id=\"Home\"\n\t\t\t\t\tscheme={scheme}\n\t\t\t\t\tcamelCase={camelCase}\n\t\t\t\t\tgoToPage={goToPage}\n\t\t\t\t\tposition={position}\n\t\t\t\t\tgeolocation={geolocation}\n\t\t\t\t\tchooseLevel={chooseLevel}\n\t\t\t\t\ticonStatus={iconStatus}\n\t\t\t\t\tchangeLevel={changeLevel}\n\n\n\t\t\t\t/>\n\t\t\t\t<Play\n\t\t\t\t\tid=\"Play\"\n\t\t\t\t\tscheme={scheme}\n\t\t\t\t\tcamelCase={camelCase}\n\t\t\t\t\tgoToPage={goToPage}\n\t\t\t\t\tposition={position}\n\t\t\t\t\tgeolocation={geolocation}\n\t\t\t\t\tleft={left}\n\t\t\t\t\tright={right}\n\t\t\t\t\ttitle={title}\n\n\t\t\t\t\t\n\n\n\t\t\t\t/>\n\t\t\t\t<Settings\n\t\t\t\t\tid=\"Settings\"\n\t\t\t\t\tscheme={scheme}\n\t\t\t\t\tcamelCase={camelCase}\n\t\t\t\t\tsavePositionGlobal={savePositionGlobal}\n\t\t\t\t\tchangeLevel={changeLevel}\n\t\t\t\t\tgeolocation={geolocation}\n\t\t\t\t\tchooseLevel={chooseLevel}\n\t\t\t\t\tdescriptionButton={descriptionButton}\n\t\t\t\t\ticonStatus={iconStatus}\n\t\t\t\t/>\n\t\t\t\t<Rating\n\t\t\t\t\tid=\"Rating\"\n\t\t\t\t/>\n\t\t\t\t<Info\n\t\t\t\t\tid=\"Info\"\n\t\t\t\t\tscheme={scheme}\n\t\t\t\t\tcamelCase={camelCase}\n\t\t\t\t\tgoToPage={goToPage}\n\t\t\t\t/>\n\t\t\t\t<Warning\n\t\t\t\t\tid=\"Warning\"\n\t\t\t\t\tscheme={scheme}\n\t\t\t\t\tcamelCase={camelCase}\n\t\t\t\t\tgoToPage={goToPage}\n\t\t\t\t\tsavePositionGlobal={savePositionGlobal}\n\t\t\t\t\tgeolocation={geolocation}\n\t\t\t\t/>\n\t\t\t</View>\n\t\t</ConfigProvider>\n\t\t\n\t\t\n\t);\n}\n\nexport default App;","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport bridge from '@vkontakte/vk-bridge';\nimport App from './App.js';\nimport { platform, IOS } from '@vkontakte/vkui';\n\nbridge.send('VKWebAppInit', {}); // Запусааем приложение\nconst root = document.getElementById('root');\n\nReactDOM.render(<App />, root); // Рендерим App.js\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n","module.exports = __webpack_public_path__ + \"static/media/arrow.7aac8323.svg\";","module.exports = __webpack_public_path__ + \"static/media/AvatarApp.4818ec8b.png\";"],"sourceRoot":""}